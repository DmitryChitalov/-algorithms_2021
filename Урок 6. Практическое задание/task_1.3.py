"""
4.	Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
Количество элементов (n) вводится с клавиатуры.

Массив в этом задании строить не нужно!
Нужно решить без него!

Пример:
Введите количество элементов: 3
Количество элементов: 3, их сумма: 0.75

Подсказка:
Каждый очередной элемент в 2 раза меньше предыдущего и имеет противоположный знак

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

from memory_profiler import profile


n = int(input('Введите количество элементов: '))


@profile
def old_func(n):
    def sum_nums(i, num=1):
        if i <= 0:
            return 0
        else:
            return num + sum_nums(i - 1, -num / 2)
    print(f'Количество элементов: {n}, их сумма: {sum_nums(n)}')


@profile
def new_func(n):
    num = 1
    sum_nums = 0
    for i in range(n):
        sum_nums += num
        num = -num / 2
    print(f'Количество элементов: {n}, их сумма: {sum_nums}')


old_func(n)
new_func(n)

"""
Вывод: Рекурсия является стильным решением и может серьезно сэкономить время на написание кода, но в случае когда нужен
минимальный расход памяти следует по возможности применять решение через цикл.
"""
