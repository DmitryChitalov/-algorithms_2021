"""
Задание 3 *.
Сделать профилировку для скриптов с рекурсией и сделать описание,
можно ли так профилировать и есть ли 'подводные камни' в профилировании?
Придумать как это решить!
Есть очень простое решение
"""

from pympler import asizeof
from memory_profiler import memory_usage


def decorat(func):
    """Функция-декоратор"""

    def wrapper(arg1):
        mem1 = memory_usage()
        res = func(arg1)
        mem2 = memory_usage()
        mem_diff = mem2[0] - mem1[0]
        return res, mem_diff

    return wrapper


@decorat
def factor_dec(arg):
    """Функция-представления"""
    res = fact(arg)
    return res


def fact(num):
    """Функция вычисления факториала числа рекурсией"""
    if num == 1:
        return num
    else:
        return num * fact(num - 1)


if __name__ == '__main__':
    for number in range(4, 6):
        print("-" * 40)
        print('!', number)

        result_2 = factor_dec(number)
        print(f'Выполнение заняло {result_2[1]} Mib')
        print(f'Память : {asizeof.asizeof(factor_dec(number))}\n'
              f'{"-" * 40}')
        print(f'Результат: {result_2[0]}\n')

"""
Профилировка скрипта с рекурсией возможна, но при выводе результатов
декоратор результатом вернет кортежем весь стек вместо вычесленного числа.

Выйти из данной проблемы можно обернув декоратором "функцию-представления", которая будет
вызывать "функцию-вычисления". Но при использовании "функции-представления" увеличиваются 
затрачиваемая память.

Так же при повторном использовании без прерывания скрипта дельта memory_usage вернет 0.0.

Также 
----------------------------------------
! 4
Выполнение заняло 0.0078125 Mib
Память : 112
----------------------------------------
Результат: 24

----------------------------------------
! 5
Выполнение заняло 0.0 Mib
Память : 112
----------------------------------------
Результат: 120
"""
