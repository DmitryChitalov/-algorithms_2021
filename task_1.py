"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Оптимизируйте, чтобы снизить время выполнения
Проведите повторные замеры.

Добавьте аналитику: что вы сделали и почему!!!
Без аналитики задание не принимается
"""
from timeit import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


# Сдалем замеры времени выполнения кода
elements = [i for i in range(200)]
print(timeit("func_1(elements)", globals=globals()))  # 14.5763135 / 15.2526242


# Оптимизируем алгоритм, используя list comprehension
def func_2(nums):
    new_arr = [el for el in nums if el % 2 == 0]
    return new_arr


# Сдалем замеры времени выполнения кода после лптимизации
print(timeit("func_2(elements)", globals=globals()))  # 8.9150858 / 11.917098


"""
Для оптимизации функции использовал list comprehension, который, как мы выяснили ранее, работает быстрее,
чем итератор с методом append.
После оптимизации кода, функция работает быстрее. Ускорение почти в 1,5 раза.
"""
