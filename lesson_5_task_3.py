"""
Задача 3.
В соответствии с документацией Python,
deque – это обобщение стеков и очередей.
Вот основное правило: если вам нужно что-то быстро дописать или вытащить, используйте deque.
Если вам нужен быстрый случайный доступ, используйте list.
Задача:
1) создайте простой список (list) и очередь (deque). Сделайте замеры и оцените что заполняется быстрее.
2) Выполните различные операции с каждым из объектов. Сделайте замеры и оцените, где и какие операции быстрее.
Не забудьте, что сравнивать, например, можно операцию appendleft дека и insert списка и т.д.
"""
from timeit import timeit
from collections import deque

my_list = list(range(100))
my_deque = deque(range(100))

print(f'Время заполнения списка {timeit("my_list", globals=globals())}.')  # 0.059509300000000015
print(f'Время заполнения Deque {timeit("my_deque", globals=globals())}.')  # 0.05873250000000002
# Заполнение происходит примерно за одинаковый период времени

print(f'Время вставки значений в список справа {timeit("my_list.append(15)", globals=globals())}.')  # 0.06179
print(f'Время вставки значений в Deque справа {timeit("my_deque.append(15)", globals=globals())}.')  # 0.06204
# Последние замеры показали, что вставка справа в словарь происходит чуть-чуть быстрее
# Но разные замеры показали разный результат, в т.ч. иногда вставка в словарь справа была чуть медленнее

my_list.insert(0, 15)
my_deque.appendleft(15)
print(f'Время вставки значений в список слева {timeit("my_list", globals=globals())}')  # 0.06721
print(f'Время вставки значений в Deque слева {timeit("my_deque", globals=globals())}.')  # 0.06087
# Вставка значений слвева в Deque происходит быстрее
