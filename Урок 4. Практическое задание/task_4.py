"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Попытайтесь написать третью версию, которая будет самой быстрой и по возможности самой лаконичной.
Сделайте замеры и опишите, получилось ли у вас ускорить задачу.

Без аналитики задание считается не принятым!
"""

from timeit import timeit

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    m = 0
    num = None
    for n in set(array):
        c = array.count(n)
        if m < c:
            m = c
            num = n

    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


print(func_1())
print(f"Время выполнения func_1: {timeit('func_1()', globals=globals(), number=100000)}")
print(func_2())
print(f"Время выполнения func_2: {timeit('func_2()', globals=globals(), number=100000)}")
print(func_3())
print(f"Время выполнения func_3: {timeit('func_3()', globals=globals(), number=100000)}")

"""
Результат работы программы:
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Время выполнения func_1: 0.0927976
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Время выполнения func_2: 0.1271995
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Время выполнения func_3: 0.08189899999999997

Видно, что третьей функцией удалось улучшить результат. Полагаю, что этого удалось добиться за счёт уменьшения 
количества элементов, по которым пробегает цикл for, путём преобразования массива во множество, убрав тем самым 
дубликаты.
"""
