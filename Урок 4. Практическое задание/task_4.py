"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Попытайтесь написать третью версию, которая будет самой быстрой и по возможности самой лаконичной.
Сделайте замеры и опишите, получилось ли у вас ускорить задачу.

Без аналитики задание считается не принятым!
"""
from timeit import timeit

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    new_array = max(zip([array.count(num) for num in set(array)], set(array)))
    return f'Чаще всего встречается число {new_array[1]}, ' \
           f'оно появилось в массиве {new_array[0]} раз(а)'


print(func_1())
print(func_2())
print(func_3())

print(f'Функция_1: {timeit("func_1()", globals=globals())}')
print(f'Функция_2: {timeit("func_2()", globals=globals())}')
print(f'Функция_3: {timeit("func_3()", globals=globals())}')

"""
Результаты на моем пк:

Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Функция_1: 1.2102886
Функция_2: 1.8130160000000002
Функция_3: 1.7408685

Функция 3 по идее должна быть быстрее за счет встроенных функций, но по подсчетам выходит, что 1ая
и 3 вариант выглядит компактней.
"""
