"""
Задание 5.**

Приведен наивный алгоритм нахождения i-го по счёту
простого числа (через перебор делителей).

Попробуйте решить эту же задачу,
применив алгоритм "Решето Эратосфена" (https://younglinux.info/algorithm/sieve)

Подсказка:
Сравните алгоритмы по времени на разных порядковых номерах чисел:
10, 100, 1000

Опишите результаты, сделайте выводы, где и какой алгоритм эффективнее
Подумайте и по возможности определите сложность каждого алгоритма.

Укажите формулу сложности О-нотация каждого алгоритма
и сделайте обоснование результатам.
"""

from timeit import timeit


def simple(i):  # O(n^2)
    """Без использования «Решета Эратосфена»"""
    count = 1
    n = 2
    while count <= i:
        t = 1
        is_simple = True
        while t <= n:
            if n % t == 0 and t != 1 and t != n:
                is_simple = False
                break
            t += 1
        if is_simple:
            if count == i:
                break
            count += 1
        n += 1
    return n


def simple_2(n, i):  # Алгоритм "Решето Эратосфена"  O(n log(log n))
    screen = []
    for k in range(n + 1):
        screen.append(k)
    screen[1] = 0

    k = 2
    while k <= n:
        if screen[k] != 0:
            j = k + k
            while j < n:
                screen[j] = 0
                j = j + k
        k += 1

    screen = set(screen)
    screen.remove(0)
    screen = list(screen)
    return screen[i - 1]


n = 10000  # диапазон исходного массива
i = int(input('Введите порядковый номер искомого простого числа: '))

print('Результат без использования "Решета Эратосфена":')
print(timeit("simple(i)", globals=globals(), number=100))

print('Результат с использованием "Решета Эратосфена":')
print(timeit("simple_2(n, i)", globals=globals(), number=100))

"""
Результаты замеров времени алгоритмов при поиске 10-го по счету простого числа (100 повторов):
- без использования "Решета Эратосфена"         0.0022306149999999914
- с использованием "Решета Эратосфена"          0.6245785239999999          

Результаты замеров времени алгоритмов при поиске 100-го по счету простого числа (100 повторов):
- без использования "Решета Эратосфена"         0.29848942800000033
- с использованием "Решета Эратосфена"          0.6061192019999999   

Результаты замеров времени алгоритмов при поиске 1000-го по счету простого числа (100 повторов):
- без использования "Решета Эратосфена"         61.872669474000006   
- с использованием "Решета Эратосфена"          0.6007699339999917

Базовый алгоритм имеет сложность O(n^2)
Алгоритм "Решето Эратосфена" имеет сложность O(n log(log n))

За счет того, что при применении "Решета Эратосфена" формируется и "просеивается" постоянно большой массив чисел, 
он работает медленнее базового алгоритма на поиске простого числа с относительно небольшим порядковым номером (см. выше).

По мере увеличения порядкового номера искомого простого числа, время выполнения алгоритма "Решето Эратосфена" 
практически не меняется, в то время как длительность выполнения базового алгоритма возрастает в квадратичной степени.

Соответственно, на относительно небольшом порядковом номере простого числа эффективнее базовый алгоритм, при 
возрастании порядкового номера - эффективнее становится "Решето Эратосфена".  

"""
