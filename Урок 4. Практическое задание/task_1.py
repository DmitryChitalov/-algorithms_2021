"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Оптимизируйте, чтобы снизить время выполнения
Проведите повторные замеры.

Добавьте аналитику: что вы сделали и почему!!!
Без аналитики задание не принимается

И прошу вас обратить внимание, что то, что часто ошибочно называют генераторами списков,
на самом деле к генераторам отношения не имеет. Это называется "списковое включение" - list comprehension.
"""


from timeit import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


def func_2(nums):
    new_arr = [nums[i] for i in range(len(nums)) if nums[i] % 2 == 0]
    return new_arr


my_nums = [10, 34, 43, 34454, 4544445654, 56, 43433, 343343, 223, 4345325423, 6356526, 3676537, 625634]
stmnts = ['func_1(my_nums)', 'func_1(my_nums)']

for st in stmnts:
    print(timeit("st", globals=globals()))

"""
В данном случае очень удобно использоваться списковое ключение.
"""
