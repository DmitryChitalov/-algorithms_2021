"""
3. Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом.
Найдите в массиве медиану. Медианой называется элемент ряда, делящий его на
две равные по длине части: в одной находятся элементы, которые не меньше медианы,
в другой – не больше медианы.

Задачу можно решить без сортировки исходного массива.

Но если это слишком сложно, то используйте метод сортировки,
который не рассматривался на уроках: Шелла, Гномья, Кучей...

Важно: стройте массив именно по формуле 2m+1
Потому что параметр m вам пригодится при поиске медианы, когда массив будет отсортирован.
Этот парамет m вам нужно запрашивать у пользователя.

[5, 3, 4, 3, 3, 3, 3]

[3, 3, 3, 3, 3, 4, 5]

my_lst
new_lts

arr[m]
----------------------------------------------------------------
from statistics import median

[3, 4, 3, 3, 5, 3, 3]

left = []
right = []

left == right and

for i in
    for
    left == right
    left.clear()
    right.clear()
"""
import random
from statistics import median

# решение 1: отсортировать и взять m элемент массива
# Гномья - не реализовывала

m = int(input("Введите значение m: "))
list_for_input = [random.randint(0, 99) for _ in range(2 * m + 1)]

# решение 2: удалить из массива половину максимальных элементов


def find_median(list):  # O(n^2)
    for i in range(m):  # O(n^2)
        list.remove(max(list))  # O(n)
        # или
        # max_elem = max(list) # O(n)
        # list.remove(max_elem) # O(n)
    return max(list)


my_median = find_median(list_for_input[:])
print("Исходный массив", list_for_input)
print("Отсортированный ", sorted(list_for_input[:]))
print(my_median)

print("Выполним проверку верно ли нашли медиану. Медиана =", median(list_for_input[:]))
