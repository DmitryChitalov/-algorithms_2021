"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы.

Сортировка должна быть реализована в виде функции.

Обязательно доработайте алгоритм (сделайте его умнее).

Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение. Обязательно сделайте замеры времени обеих реализаций
и укажите дала ли оптимизация эффективность.

Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию.

Сделайте выводы!!!
Опишите в чем была ваша доработка и помогла ли вам доработка??
"""
import timeit
import random


def bubble_sort(lst_obj):
    n = 1
    while n < len(lst_obj):
        for i in range(len(lst_obj) - n):
            if lst_obj[i] < lst_obj[i + 1]:  # по убыванию
                lst_obj[i], lst_obj[i + 1] = lst_obj[i + 1], lst_obj[i]
        n += 1
    return lst_obj


def bubble_sort2(lst_obj):
    n = 1
    while n < len(lst_obj):
        c = 0
        for i in range(len(lst_obj) - n):
            if lst_obj[i] < lst_obj[i + 1]:
                lst_obj[i], lst_obj[i + 1] = lst_obj[i + 1], lst_obj[i]
                c += 1
        if not c:
            return lst_obj
        n += 1


list1 = [random.randint(-100, 100) for _ in range(100)]
print('Исходный одномерный целочисленный массив:         ', list1)

print('Время отсортированного по убыванию без доработки: ', end=' ')
print(timeit.timeit('bubble_sort(list1[:])', globals=globals(), number=1000))
bubble_sort(list1)
print('Отсортированный массив:                           ', list1)

list1 = [random.randint(-100, 100) for _ in range(100)]  # !
print('Время отсортированного по убыванию c доработкой:  ', end=' ')
print(timeit.timeit('bubble_sort2(list1[:])', globals=globals(), number=1000))

# Доработка не дала значимых результатов. Счетчик, который я добавил просто увеличил время работы bubble_sort2(lst_obj).
# В чем была доработка: ввел переменную с = 0, в условии
# if lst_obj[i] < lst_obj[i + 1]: добавил счетчик c += 1. На следующем шаге проверяю условие, если оно срабатывает -
# выхожу сразу. И вот результаты:
#
# Исходный одномерный целочисленный массив:          [91, 48, 43, -9, 31, -37, -96, -36, 35, -58, -51, -82, -51, 49, ...
# Время отсортированного по убыванию без доработки:  0.7567049959999999
# Отсортированный массив:                            [97, 92, 91, 90, 90, 89, 88, 87, 86, 83, 83, 81, 77, 74, 74, 72, ..
# Время отсортированного по убыванию c доработкой:   0.757400525
#
# В чем ошибка: timeit.timeit('bubble_sort2(list1)' был неправильно определен