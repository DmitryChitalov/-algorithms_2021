  
"""
Задание 3. Вебинар 4 (26:25)
Определить количество различных (уникальных) подстрок с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.
Подсказка: примените вычисление хешей для подстрок с помощью хеш-функций и множества
Можно воспользоваться ф-цией hash() (см. материалы к уроку)
Пример:
рара - 6 уникальных подстрок
рар
ра
ар
ара
р
а
"""
# Ндо: 1. Получить все возможные срезы строки.
#      2. Вычислить для них ХЕШИ

import hashlib

some_str = 'papa'
some_set = set()

for i in range(len(some_str)):
    for j in range(i + 1, len(some_str) + 1):# В цикле получаем срезы строки
        if some_str[i:j] != some_str:# Исключаем запись слова целиком
# Получаем хеши для срезов, трансформируем в строку с щестнадцатиричным представлением и вставляем их во мн-во some_set
            some_set.add(hashlib.sha256(some_str[i:j].encode()).hexdigest())# хеши получаем с пом-ю фун-и sha256
            #some_set.add(hashlib.md5(some_str[i:j].encode()).hexdigest())# хеши получаем с пом-ю фун-и md5
            print(some_str[i:j], end = ' ')# Вывод всех (включая дубли) срезов-подстроек
print(f'\n{some_set}')
print(f'Колличество эл-тов в мн-ве: {len(some_set)}')

"""
sha256
p pa pap a ap apa p pa a 
{'ca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb', '148de9c5a7a44d19e56cd9ae1a554bf67847afb0c58f6e12fa29ac7ddfca9940', 'b3e1886e6a0073cfe52722c15ad6639e8143690c2769a2eed2cfb01044debfe6', '4f4ddb493f6bafe24041b80234d197ca6ee40a397c05448cd4064c82c71c05db', '9513229d435978263d82902c59d4e0fb86c941a9bf09b605cd8a6643f40149a8', '7978f506baa16285f4f3f6cee4f425c0bd5e06883e37ede4a8d8e62c03d660ef'}
Колличество эл-тов в мн-ве: 6

md5
p pa pap a ap apa p pa a 
{'0cc175b9c0f1b6a831c399e269772661', '62c428533830d84fd8bc77bf402512fc', 'e529a9cea4a728eb9c5828b13b22844c', 'e03ae33ee8417ce2c9785274217636e0', '83878c91171338902e0fe0fb97a8c47a', '4e951936957c783062a399c629ce9a95'}
Колличество эл-тов в мн-ве: 6
"""
