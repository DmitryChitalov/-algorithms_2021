"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы.
Сортировка должна быть реализована в
виде функции.
Обязательно доработайте алгоритм (сделайте его умнее)!
Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение.
Обязательно сделайте замеры времени обеих реализаций
и обосновать дала ли оптимизация эффективность
Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию.
Сделайте выводы!!!
Опишите в чем была ваша доработка и помогла ли вам доработка??
"""
from timeit import timeit

# Сортировка пузырьком
my_list = [i for i in range(-100, 100)]
print(my_list)

'''
def p_sort(lister):
    for i in lister:
        x = 0
        while x != (len(lister) - 1):
            if lister[x] < lister[x + 1]:
                lister[x], lister[x + 1] = lister[x + 1], lister[x]
                x += 1
            else:
                x += 1
    return lister


print(p_sort(my_list))

'''


def updated_p_sort(lister):
    copy_lister = lister.copy()
    for i in lister:
        x = 0
        while x != (len(lister) - 1):
            if lister[x] < lister[x + 1]:
                lister[x], lister[x + 1] = lister[x + 1], lister[x]
                x += 1
            else:
                x += 1
        if lister == copy_lister:
            break
    return lister


print(updated_p_sort(my_list))

# print(timeit('p_sort(my_list[:])', number=1000, globals=globals()))
# 3.34

print(timeit('updated_p_sort(my_list[:])', number=1000, globals=globals()))
# 0.018 best

'''
К сожалению ,я не до конца понял ,за счёт чего получилось такая большая разница времени .
Я рассчитывал на то , что будет большая разница лишь в том случае , когда элементы списка  будут изначально стоять 
по убыванию , но К моему удивлению при любых обстоятельствах функция под номером два работает намного быстрее
Может быть я не до конца понимаю функцию Copy  , 
я перетаскивал элементы списка из конца в начало из начала в конец и думал что-то будет меняться время ,
но время оставалась одним и тем же . 
Объясните мне пожалуйста за счёт чего это происходит.
'''