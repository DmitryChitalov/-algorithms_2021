"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""

comp_rep = {
    'company_1': 1000,
    'company_2': 200,
    'company_3': 3000,
    'company_4': 400,
    'company_5': 500,
    'company_6': 600
}

# вариант 1
# сложность T(n) = O(1) + O(n^2) + O(len(...)) = O(n^2) - квадратичная

sorted_values = sorted(comp_rep.values())  # сложность О(1) - константная
sorted_dict = {}  # сложность О(1) - константная

for i in sorted_values:  # сложность O(n^2) - квадратичная
    for k in comp_rep.keys():
        if comp_rep[k] == i:
            sorted_dict[k] = comp_rep[k]
            break

sorted_list = list(sorted_dict)  # сложность O(len(...)) зависит от длины аргумента
print(sorted_list[-1], sorted_list[-2], sorted_list[-3])

# вариант 2
# сложность  О(1) +  О(1) =  О(1) - константная

sorted_keys = sorted(comp_rep, key=comp_rep.get, reverse=True)  # сложность О(1) - константная
print(*sorted_keys[:3])  # сложность О(1) - константная

# Вывод: решение 2 эффестивнее, т.к. тмеет сложность О(1) - константную
