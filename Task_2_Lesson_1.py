"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.
Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
"""


# Первый вариант (сложность O(n^2) - квадратичная)
# Единственное, что смогла придумать - сортировка выбором и вывод 1-го элемента в списке


def selection_sort(n):
    for i in range(0, len(n) - 1):  # сложность O(n) - линейная
        for j in range(i + 1, len(n)):  # сложность O(n2) - квадратичная
            if n[j] < n[i]:  # сложность O(1) - константная
                n[i], n[j] = n[j], n[i]  # сложность O(1) - константная
    return n[0]  # сложность O(1) - константная

# Второй вариант (сложность O(n) - линейная)


def my_min(n):
    min_num = n[0]  # сложность О(1) - константная
    for i in range(len(n)):  # сложность O(n) - линейная
        if min_num > n[i]:
            min_num = n[i]
    return min_num


print(my_min([0, 1, 5]))
print(selection_sort([0, 1, 5]))




