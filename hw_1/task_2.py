"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

from random import randint

MIN_DIGIT = 1
MAX_DIGIT = 20
QUANTITY_DIGIT = 10

rand_list = [randint(MIN_DIGIT, MAX_DIGIT) for i in range(QUANTITY_DIGIT)]


# первый алгоритм O(n^2)

def find_min_n2(lst):
    for i in lst:               # O(n)
        is_min = True           # O(1)
        for j in lst:           # O(n)
            if i > j:           # O(1)
                is_min = False
        if is_min:
            return i


# второй алгоритм O(n)

def find_min_n(lst):
    min_number = lst[0]  # назначаем минимальным первое попавшееся число,
    for i in lst:        # если оно действительно окажется минимальным - ну и хорошо
        if i < min_number:
            min_number = i
    return min_number

print(f'список: {rand_list}\n')
print('его минимальное значение:')
print(f'Поиск алгоритмом О(n^2): {find_min_n2(rand_list)}')
print(f'Поиск алгоритмом О(n): {find_min_n(rand_list)}')