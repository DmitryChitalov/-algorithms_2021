"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

# def func(num):
#     while num >= 1:
#         rem = num % 10
#         num = num // 10
#         if rem % 2 == 0:
#             print(f'Число {rem} четное')
#         else:
#             print(f'Число {rem} не четное')
#
# func(1236534)

def func(num):
    if num >= 1:
        rem = num % 10
        num = num // 10
        if rem % 2 == 0:
            print(f'Число {rem} четное')
            func(num)
        else:
            print(f'Число {rem} не четное')
            func(num)

func(1236534)