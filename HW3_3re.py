"""
Задание 3.
Определить количество различных (уникальных) подстрок с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: примените вычисление хешей для подстрок с помощью хеш-функций и множества

Пример:
рара - 6 уникальных подстрок  #  здесь уникальных 5,  а различных 7

рар
ра
ар
ара
р
а
a
"""

#
# в задании указано различных (уникальных) подстрок, но это разное: различные это множество всех входящих подстрок,
# а уникальные - это присутствующие в строке один раз. См пример выше, там ошибка).
# в задании нашел кол-во различных подстрок
# если надо уникальных, то надо проверять количество вхождений подстроки в строке

s = 'papa'
st = []
st_hash = []
for i in range(len(s)):  # цикл по количеству символов в строке s
    for j in range(1, len(s[i:]) + 1):  # цикл с позиции текущего символа i до конца строки s
        print(s[i:j + i])  # берем срез с позиции текущего символа i постепенно увеличивая конечную позицию среза
        st.append(s[i:j + i])  # добавляем подстроку s[i:j + 1] в список st[]
        st_hash.append(hash(s[i:j + i]))  # можно и без хэширования, set сделает множество и из списка
print(f'Количество различных подстрок в {s} равно {len(set(st_hash))}')  # количество подстрок будет равно количеству
print(st)
print(st_hash)
# элементов (длине) множества созданного из списка подстрок st[]

