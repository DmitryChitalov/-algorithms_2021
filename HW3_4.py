"""
Задание 4.
Реализуйте скрипт "Кэширование веб-страниц"

Функция должна принимать url-адрес и проверять
есть ли в кэше соответствующая страница, если нет, то вносит ее в кэш

Подсказка: задачу решите обязательно с применением 'соленого' хеширования и хеш-таблиц
Можете условжнить задачу, реализовав ее через ООП
Не забудьте, что кэширование - механизм, а хеш-таблица - средство его реализации
"""
import hashlib


cash_tbl_url = {}  # словарь, он же хеш-таблица, ключ это хеш (его используем для быстрого поиска), значение это сам
# адрес url


def url_to_hash(psw):
    slt = '1234567'  # str(len(lst_hash))    #  соль, может быть любая строка, можно изменяемую каждый раз (например
    # длина url или первые несколько символов url( срез))
    res = hashlib.sha256(slt.encode() + psw.encode()).hexdigest()
    return res


def check_url(url):
    if cash_tbl_url.get(str(url_to_hash(url))) is None:
        print('такого адресса нет в кэше, добавим его в кэш')
        cash_tbl_url.update({url_to_hash(my_url): my_url})
        return 'False'
    else:
        print('такой адрес есть в кэше')
        return 'True'


while True:
    my_url = input('ДЛЯ ВЫХОДА ВВЕДИТЕ СИМВОЛ  0\n     Введите адрес:')
    if my_url == '0':
        break
    check_url(my_url)
print(cash_tbl_url)
