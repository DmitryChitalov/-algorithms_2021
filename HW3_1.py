"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря программно,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!
"""
import time

start_time = time.time()
lst = [i for i in range(10000)]
stop_time_lst = time.time()
dct = {x: x for x in range(10000)}
stop_time_dct = time.time()
a = dct.get(444)
stop_time_dct_get = time.time()
b = lst[444]
stop_time_lst_i = time.time()
lst.index(444)
stop_time_lst_index = time.time()
lst.pop(444)
stop_time_lst_pop = time.time()
dct.pop(444)
stop_time_dct_pop = time.time()
# print(lst)
# print(dct)
print(f'Время заполнения списка:{(stop_time_lst - start_time):.7f}')
print(f'Время заполнения словаря:{(stop_time_dct - stop_time_lst):.7f}')
print(f'Время взятия значения по ключу:{(stop_time_dct_get - stop_time_dct):.7f}')
print(f'Время взятия значения списка по индексу:{(stop_time_lst_i - stop_time_dct_get):.7f}')
print(f'Время поиска  индекс элемента:{(stop_time_lst_index - stop_time_lst_i):.7f}')
print(f'Время удаления  элемента в списке:{(stop_time_lst_pop - stop_time_lst_index):.7f}')
print(f'Время удаления элемента в словаре:{(stop_time_dct_pop - stop_time_lst_pop):.7f}')

"""
Время заполнения списка:0.0007291сек быстрее, чем заполнение словаря
Время заполнения словаря:0.0011058сек  словарь дольше заполняется, т.к. надо заполнить и ключ и значение

Время взятия значения по ключу:0.0000031сек медленее чем взятие по индексу из списка
Время взятия значения списка по индексу:0.0000010сек быстрее

Время поиска  индекс элемента:0.0000100сек 

Время удаления  элемента в списке:0.0000100сек на порядок медленее, чем поиск и удаление в словаре, т.к. надо найти нужное значение 
Время удаления элемента в словаре:0.0000010сек словарь быстрее ищет и удаляет, т.к. не надо искать, а сразу обращается к нужному ключу

Общий вывод: словари быстрее в операциях, в которых необходим поиск элементов,
если же известен индекс элемента в списке то в списке его найти чуть быстрее чем в словаре
Если предполагается поиск элементов в программе, то лучше использовать хэш-таблицы,т.е. словари

"""


