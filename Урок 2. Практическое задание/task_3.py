"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321

Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def reverse_num(num):
    """Реверс цифр переданного целого числа (знак не учитывается, дробная
    часть - отбрасывается)"""

    # валидация входных данных
    try:
        num = abs(int(num))
    except ValueError:
        print(f"Функция reverse_num() работает с числами! Передано: {num}")
        exit(1)

    remain, last_digit = divmod(num, 10)
    result = ''  # сюда будем набирать с конца числа цифры

    # базовый случай - цифра последняя в числе
    if remain == 0:
        return str(last_digit)

    # шаг рекурсии - пока в числе есть больше 1 цифры
    result += str(last_digit) + reverse_num(remain)
    return result


if __name__ == '__main__':

    # блок тестов
    test_numbers = (12, 1234567890, -5, 0, 46.45, 'df')
    print('Программа "разворачивает" цифры поданного на вход числа (знак и '
          'дробная часть - отбрасываются, если есть).')
    print(f'Тестовый набор: {test_numbers}')
    for number in test_numbers:
        print(f'\t - число {number}, развернутое число: {reverse_num(number)}')
