"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

# По аналогии с задачей 2
def revers_number(num):
     if num < 10:# Базовый случай, т.е. как только число однозначное - СТОП
         return str(num)
     else:
         return str(num % 10) + revers_number(num // 10)
# Т.е. возвращаем число-остаток от дел-я (крайнее справа) и ЦЕЛОЕ число, ставшее на одну цифру меньше. Повторяем, повторяем...
number = int(input("Введите число: "))
print(f'Перевернутое число: {revers_number(number)}')



"""
def revers_number(numb):
    Рекурсия
    rest_numb, numeral = divmod(numb, 10)# Функция divmod(делимое число, делитель) возвращает кортеж, содержащий частное и остаток
    if rest_numb == 0:
        return str(numeral)
    else:
        return str(numeral) + str(revers_number(rest_numb))
        
        
def revers_number(num):
    return str(num) if num < 10 else str(num % 10) + revers_number(num // 10)

number = int(input("Введите число, которое требуется перевернуть: "))
print(f'Перевернутое число: {revers_number(number)}')
"""


