"""
4.	Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
Количество элементов (n) вводится с клавиатуры.
Пример:
Введите количество элементов: 3
Количество элементов: 3, их сумма: 0.75
Подсказка:
Каждый очередной элемент в 2 раза меньше предыдущего и имеет противоположный знак
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

"""
Итак. Есть ряд чисел: 
1 -0.5 0.25 -0.125 
x[1] = 1, x[2] = 1 + (- 0.5), , x[3] = 0.25, , x[4] = (- 0.125) 
x[n] = 1, x[n+1] = - 0.5, x[n+2] = 0.25, x[n+3] = - 0.125 
x[n+1] = x[n] * (-1/2); x[n+2] = x[n+1] * (-1/2)...... 
Т.е. Каъдый последующий = предыдущий дел-ый на (-1/2): Возврат: 1 + recur(предыдущий) / - 2 + ......
                                        Пусть n = 3:  Для n = 1     1 + recur(1-й - 1) / -2 = 1 + 0
                                                      Для n = 2     1 + recur(2-й - 1) / -2 = 1 + (-0.5)
                                                      Для n = 3     1 + recur(3-й - 1)/ -2 = 1 + (-0.5) + (-0.5/-2)
                                                       
"""

def recur(elem):
    if elem == 0:
        return 0# Базовый случай, т.е. как только "Предыдущие" заканчиваются - СТОП вызова ф-ии
    else:
        return 1 + recur(elem - 1) / - 2
n = int(input('Введите количество элементов: '))
print(f'Количество элементов: {n}, их сумма: {recur(n)}')


"""
def recur_method(i, numb, n_count, common_sum):
    """Рекурсия"""
    if i == n_count:
        print(f"Количество элементов - {n_count}, их сумма - {common_sum}")
    elif i < n_count:
        return recur_method(i + 1, numb / 2 * -1, n_count, common_sum+numb)


try:
    N_COUNT = int(input("Введите количество элементов: "))
    recur_method(0, 1, N_COUNT, 0)
except ValueError:
    print("Вы вместо числа ввели строку. Исправьтесь")