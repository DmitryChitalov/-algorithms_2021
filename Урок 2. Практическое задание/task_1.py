"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

propper_operators = ["+", "-", "*", "/"]


def calculate():
    operation = input("Input operation: ") 
    if operation == "0":
        return
    elif not operation in propper_operators:
        print("Operator not found")
        calculate()
    else:
        first_operand = int(input("Input first operand: "))
        second_operand = int(input("Input second operand: ")) 
        if second_operand == 0 and operation == "/":
            print("Division by zero")
            calculate()
        else:
            if operation == "+":
                result = first_operand+second_operand
            elif operation == "-":
                result = first_operand-second_operand
            elif operation == "*":
                result = first_operand*second_operand
            elif operation == "/":
                result = first_operand/second_operand
            print(result)
            calculate()
        

calculate()
