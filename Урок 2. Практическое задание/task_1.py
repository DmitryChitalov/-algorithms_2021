"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def calc(operation: str):
    if operation == '0':
        return
    elif operation not in ('+', '-', '*', '/'):
        print('Неверная операция')
        new_operation = input('Введите операцию ')
        calc(new_operation)
    try:
        res = None
        first_num = int(input('Введите первое число: '))
        second_num = int(input('Введите второе число: '))
    except ValueError:
        print('Неверный тип данных')

    else:
        if operation == '+':
            res = first_num + second_num
        elif operation == '-':
            res = first_num - second_num
        elif operation == '*':
            res = first_num * second_num
        elif operation == '/':
            if second_num == 0:
                print('Деление на ноль')
            else:
                res = first_num / second_num
        if res:
            print('Ваш результат', res)
    finally:
        new_operation = input('Введите операцию ')
        calc(new_operation)


calc('*')

# есть такой недочет, что если операция неверная, то числа все равно запросятся
