"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

def calculate():
    action = input('Укажите операцию (" - ", " + ", " * ", " / ") или введите "0" для выхода из программы: ')
    first_number = int(input('Введите первое число: '))
    second_number = int(input('Введите второе число: '))
    while action != "0":
        try:
            if action == "+":
                print(first_number + second_number)
            elif action == "-":
                print(first_number - second_number)
            elif action == "*":
                print(first_number * second_number)
            elif action == "/":
                print(first_number / second_number)
            elif action == "0":
                break
            else:
                raise ValueError("Выберите команду из списка.")
        except:
            ValueError("Выберите команду из списка.")
            print("Выберите команду из списка.")
        finally:
            calculate()
    return


calculate()














