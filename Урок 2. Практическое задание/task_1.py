"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calculate():
    operations_list = ['+', '-', '*', '/']
    operation = input('Выберите действие (+, -, *, / или 0 для выхода): ')
    if operation == '0':
        print(f'Выход, завершение работы функции: "{calculate.__name__}"')
    else:
        if operation in operations_list:
            try:
                number_1 = float(input('Введите первое число: '))
                number_2 = float(input('Введите второе число: '))
                if operation == '+':
                    print(f'{number_1} {operation} {number_2} = {number_1 + number_2}')
                elif operation == '-':
                    print(f'{number_1} {operation} {number_2} = {number_1 - number_2}')
                elif operation == '*':
                    print(f'{number_1} {operation} {number_2} = {number_1 * number_2}')
                elif operation == '/':
                    print(f'{number_1} {operation} {number_2} = {round(number_1 / number_2, 3)}')
            except ValueError:
                print('Ошибка, введите корректный числа!')
            except ZeroDivisionError:
                print('Ошибка, деление на ноль')
        else:
            print(f'Такой операции не существует: "{operation}"')
        calculate()


calculate()
