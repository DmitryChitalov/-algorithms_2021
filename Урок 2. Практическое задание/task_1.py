"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def func1(result: int = 0):
    answer1, answer2, answer3 = input('Введите +, -, *, / или 0 для выхода: '), input('Первое число: '), input(
        'Второе число: ')
    try:
        int(answer2)
        int(answer3)
        if answer1 == '0':
            return result
        elif answer1 not in ['0', '+', '-', '*', '/']:
            print('Вы ввели некорректный знак')
            return func1()
        elif answer1 == '/' and answer3 == '0':
            print('На ноль делить нельзя')
            return func1()
        return print(eval(f'{answer2}{answer1}{answer3}'))

    except ValueError:
        print('Вы ввели не числа')
        return func1()


func1()
