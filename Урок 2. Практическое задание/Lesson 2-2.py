"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def num_count(num, even_num, odd_num):
    if num == 0:
        return [even_num], [odd_num]
    else:
        if num % 2 == 1:
            return num_count(num // 10, even_num, (odd_num + 1))
        if num % 2 == 0:
            return num_count(num // 10, (even_num + 1), odd_num)


print('Количество чётных и нечётных цифр равно: ', (num_count(int(input('Введите число: ')), 0, 0)))
