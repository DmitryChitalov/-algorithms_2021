"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

def even_odd_num(num, even, odd):
    if num == 0:
        return f'Количество четных и нечетных цифр в числе равно: {even, odd}'
    remains = num % 10
    num = num // 10
    if (remains % 2) == 1:
        return even_odd_num(num, even, odd + 1)
    if (remains % 2) == 0:
        return even_odd_num(num, even + 1, odd)

inp_num = int(input('Введите число: '))
print(even_odd_num(inp_num, 0, 0))
