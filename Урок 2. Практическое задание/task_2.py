"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def rec(n=int(input("Введите число:")), even=0, not_even=0):
    d = len(str(n))
    div = ['0' for i in range(d - 1)]
    div = int(f'1{"".join(div)}')
    num = n // div
    if num % 2 == 0:
        even += 1
    else:
        not_even += 1
    if len(str(n)) == 1:
        print(f'Количество четных цифр: {even}, нечетных: {not_even}.')
    else:
        n = n % div
        return rec(n, even, not_even)


rec()
