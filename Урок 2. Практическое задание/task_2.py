"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def count_odd_even(number, even_num, odd_num):
    if len(number) > 0:
        check_num = int(number.pop())
        if check_num % 2 == 0:
            even_num += 1
        else:
            odd_num += 1
        count_odd_even(number, even_num, odd_num)
    else:
        print(f'Количество четных и нечетных цифр в числе равно: ({even_num}, {odd_num})')


even_n, odd_n = 0, 0
num = input('Введите целое число: ')
count_odd_even(list(num), even_n, odd_n)
