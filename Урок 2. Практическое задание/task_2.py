"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def counter(number, even=0, uneven=0):
    if number == 0:
        return even, uneven
    else:
        digit = number % 10
        number = number // 10
        if digit % 2 == 0:
            even += 1
        else:
            uneven += 1
        return counter(number, even, uneven)


if __name__ == "__main__":
    my_number = int(input("Введите число:\n"))
    try:
        print(f"Число содержит четных и нечетных цифр соответственно: {counter(my_number)}")
    except ValueError:
        print("Нужно ввести число")


