"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_odd_counter(num, odd=0, even=0):
    if num == 0:  # базовый случай
        print(f'Нечетных цифр: {odd} Четных цифр: {even}')
    else:  # шаг рекурсии
        try:
            if int(num) % 2 == 0:
                even += 1
            else:
                odd += 1
            number = num // 10
            return even_odd_counter(number, odd, even)
        except ValueError:
            print(f'Значение {num} не является натуральным числом!')

even_odd_counter(12345)