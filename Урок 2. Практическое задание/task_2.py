"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def get_number():
    result_dict = {'num_1': 0, 'num_2': 0}
    num_list = list(input('Введите целое число: \n'))

    def check_number():
        if (len(num_list)) != 0:
            num = int(num_list.pop())
            if num % 2 != 0:
                result_dict['num_2'] += 1
                check_number()
            else:
                result_dict['num_1'] += 1
                check_number()
    check_number()
    print(f'Четных: {result_dict["num_1"]}; нечетных: {result_dict["num_2"]}')


get_number()

