"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def task_2(number, even=0, odd=0):
    """
    Функция подсчета четных и нечетных цифр в введенном числе
    """
    if number == 0:
        return f"Количество четных и нечетных цифр в числе равно: ({even}, {odd})"
    num = number % 10
    number = number // 10
    if num % 2 != 0:
        odd += 1
        return task_2(number, even, odd)
    else:
        even += 1
        return task_2(number, even, odd)


print(task_2(13013246246))
