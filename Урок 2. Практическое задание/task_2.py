"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def ev_odd_num(number, even=0, odd=0):
    if number == 0:
        print(f"Sum of even numbers: {even}\n"
              f"Sum of odd numbers: {odd}")
        return
    elif (number % 10) % 2 == 0:
        even += 1
    elif (number % 10) % 2 == 1:
        odd += 1
    return ev_odd_num(number // 10, even, odd)


try:
    ev_odd_num(int(input("Enter a natural number: ")))
except ValueError:
    print("Invalid number")
