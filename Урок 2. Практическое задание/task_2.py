"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

# number = int(input('Введите число: '))
# even = 0
# odd = 0
# while number >= 1:
#     check = number % 10
#     if check % 2 == 0:
#         even += 1
#     elif check % 2 == 1:
#         odd += 1
#     number //= 10
#
# print(even, odd)


def even_odd_count(number, even, odd):
    if number < 1:
        return f'Количество четных и нечетных цифр в числе равно: ({even}, {odd})'
    else:
        check = number % 10
        if check % 2 == 0:
            even += 1
        elif check % 2 == 1:
            odd += 1
        number //= 10
        return even_odd_count(number, even, odd)


number = int(input('Введите число: '))
even = 0
odd = 0
print(even_odd_count(number, even, odd))
