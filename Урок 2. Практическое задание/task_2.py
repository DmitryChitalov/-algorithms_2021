"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def even_odd_counter(var, odd_counter=0, even_counter=0):
    if var == 0:  # проверяем,есть ли цифры в заданном числе
        return even_counter, odd_counter
    else:
        var_num = var % 10  # достаём единицы из числа
        var = var // 10  # убираем последнюю цифру из числа
        if var_num % 2 != 0:
            odd_counter += 1
        else:
            even_counter += 1
        return even_odd_counter(var, odd_counter, even_counter)


user_number = int(input('Введите число: '))
print('Количество четных и нечетных цифр в числе равно: ' + str(even_odd_counter(user_number)))
