"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def even_odd(number, even=0, odd=0):

    temp = number

    if (temp % 10) % 2 == 0:
        even += 1
    else:
        odd += 1

    temp = temp // 10

    if temp == 0:
        return even, odd
    else:
        return even_odd(temp, even, odd)


a = int(input('Введите натуральное число: '))  # Проверки на валидность введеных значений не выполняю
print(f'Количество четных и нечетных цифр равно: {even_odd(a)}')
