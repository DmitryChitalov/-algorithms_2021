"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""
count_even, count_odd = 0, 0
def count_even_odd(num):
    global count_even
    global count_odd
    if num < 10:
        if num % 2 == 0:
            count_even += 1
        else:
            count_odd += 1
    else:
        count_even_odd(num % 10)
        count_even_odd(num // 10)

# user_number = int(input("Введите натуральное число"))
user_number = int('34560')
count_even_odd(user_number)
print(f'number {user_number} contains even = {count_even}, odd = {count_odd}')
