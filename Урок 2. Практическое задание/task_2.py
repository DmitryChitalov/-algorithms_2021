"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""
def numbers_count(num, even=0, odd=0):
    if num == 0:
        return even, odd
    else:
        whole_numb = num % 10
        num = num // 10
        if whole_numb % 2 == 0:
            even += 1
        else:
            odd += 1
        return numbers_count(num, even, odd)


try:
    result = int(input("Введите число:"))
    print(f"кол-во четных и нечетных чисел: {numbers_count(result)}")
except ValueError:
    print("Нужно было ввести число")