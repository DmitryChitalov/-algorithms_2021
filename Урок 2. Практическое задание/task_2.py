"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

# number = 12346

# if number % 10 % 2 == 0:
#     print("чет")
#     ch +=1
# else:
#     print("нечет")
#     nch +=1
#
# print(cur_n)
# number //= 10
# print(number)

def chnch(number, ch=0, nch=0):

    if number == 0:
        print(f"В числа {num} четных цифр {ch}, нечетных {nch}")
    else:
        if number % 10 % 2 == 0:
            ch += 1
        else:
            nch += 1
        number //= 10
        return chnch(number, ch, nch)

num = int(input("введите число: " ))
chnch(num)
# print(f"В числа {num} четных цифр {ch}, нечетных {nch}")