"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_num(num_1, even=0, odd=0):
    if num_1 == 0:
        return even, odd
    else:
        num_2 = num_1 % 10
        num_1 = num_1 // 10
        if num_2 % 2 == 0:
            even += 1
        else:
            odd += 1
        return count_num(num_1, even, odd)


number = input('Введите число: ')
if number.isdigit():
    print(f'Колличество чётных цифр в числе {count_num(int(number))[0]}')
    print(f'Колличество нечётных цифр в числе {count_num(int(number))[1]}')
else:
    print('Вы ввели строку вместо числа!')
