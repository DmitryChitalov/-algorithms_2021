"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
numb = 54213  # тестируемое число
evens = []  # список для четных
odds = []  # список для нечетных


def calc(num):
    print(num)
    ost = num % 10

    if num <= 0:
        print(f"Result Calc for: {numb}")
        print(f"evens {len(evens)}: {evens} ")
        print(f"odds {len(odds)}: {odds}")
        return
    if ost % 2 == 0:
        evens.append(ost)
    else:
        odds.append(ost)
    calc(num // 10)


# Test
calc(numb)
