"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def digit_cnt(num, digit_1=0, digit_2=0):
    if num == 0:
        return print(f'({digit_1}, {digit_2})')
    else:
        a_num = num % 10
        num = num // 10
        if a_num % 2 == 0:
            digit_1 += 1
        else:
            digit_2 += 1
        return digit_cnt(num, digit_1, digit_2)


user_num = int(input('Введите число: '))
digit_cnt(user_num)
