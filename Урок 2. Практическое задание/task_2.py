"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def count_num(base_num=int(input('Введите число: ')), even_count=0, odd_count=0, count_operation=0):
    answer = f'В числе {even_count} четных цифр(ы), {odd_count} нечетных.'
    if base_num == 0 and count_operation == 0:
        return print("В нуле одна четная цифра")
    elif base_num == 0:
        return print(answer)
    elif base_num % 10 % 2 == 0:
        return count_num(base_num // 10, even_count + 1, odd_count, count_operation + 1)
    elif base_num % 10 % 2 != 0:
        return count_num(base_num // 10, even_count, odd_count + 1, count_operation + 1)


count_num()
