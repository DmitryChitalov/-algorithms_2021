"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def eve(number, eve_coun=0, uneve_coun=0):
    if number == 0:
        return (eve_coun, uneve_coun)
    elif number < 0:
        print("Только натуральные числа")
        return ''
    else:
        even = number % 2
        if even == 0:
            return eve(number // 10, eve_coun + 1, uneve_coun)
        elif even == 1:
            return eve(number // 10, eve_coun, uneve_coun + 1)


print(eve(12345666111100054697))
