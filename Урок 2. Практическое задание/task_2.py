"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def calc_even_odd(num: int, even: int = 0, odd: int = 0):
    if num != 0:
        if (num % 10) % 2 == 0:
            even += 1
        else:
            odd += 1
        return calc_even_odd(num // 10, even, odd)
    else:
        print(f'Количество четных и нечетных цифр в числе равно: ({even}, {odd})')
        return


while True:
    try:
        user_num = int(input(f'Введите число: '))
    except ValueError:
        continue
    calc_even_odd(user_num)
    break
