"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def count_even_odd(num, even=0, odd=0):

    if not num:
        print(f'Количество четных чисел: {even}, нечетных: {odd}')
        return

    divide_by_ten = num // 10
    last_digit = num % 10 if divide_by_ten else divide_by_ten
    if last_digit % 2 == 0:
        even += 1
    else:
        odd += 1

    count_even_odd(divide_by_ten, even=even, odd=odd)


if __name__ == '__main__':
    number = int(input('Введите число:\n'))
    count_even_odd(number)
