"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def separator(number, even, odd):
    if number == 0:
        return f"В числе содержится: {even} цифр четных и {odd} цифр нечетных."
    else:
        if number % 2 == 0:
            even += 1
        else:
            odd += 1
        return separator(number // 10, even, odd)


if __name__ == "__main__":
    while True:
        try:
            user_answer = int(input("Введите число или для выхода наберите - 0: "))
            if user_answer < 0:
                raise ValueError
            elif user_answer == 0:
                break
            print(separator(user_answer, 0, 0))
        except ValueError:
            print("Вы вели не число, повторите ввод!")

    print("Спасибо, что воспользовались моей программой!")

