"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""

def calc_numbers(my_number, num_odd, num_even):
    if my_number == 0:
        print("Количество четных и нечетных цифр в числе равно: (%d, %d)" % (num_even, num_odd))
    else:
        my_digit = my_number % 10
        if my_digit % 2 != 0:
            num_odd += 1
        else:
            num_even += 1
        calc_numbers(my_number // 10, num_odd, num_even)

calc_numbers(int(input("Введите число: ")), 0, 0)
