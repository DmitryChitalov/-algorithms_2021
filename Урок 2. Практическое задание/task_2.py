"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
test_int = int(input("Введите число: "))


def func1(test_int, odd=0, even=0):
    if len(str(test_int)) == 1:
        if test_int % 2 == 0:
            even += 1
            return f"Количество четных и нечетных цифр в числе равно: ({even}, {odd})"
        else:
            odd += 1
            return f"Количество четных и нечетных цифр в числе равно: ({even}, {odd})"
    if test_int % 2 == 0:
        even += 1
        return func1(test_int//10, odd, even)
    else:
        odd +=1
        return func1(test_int//10, odd, even)


print(func1(test_int))
