"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def parity(number, count_par, count_not_par):
    if number == 0:
        return print(f'Количество четных и нечетных цифр в числе равно: ({count_par}, {count_not_par})')
    if (number % 2) == 1:
        count_not_par += 1
    else:
        count_par += 1
    parity(number // 10, count_par, count_not_par)


try:
    number = int(input('Введите число'))
    count_par = 0
    count_not_par = 0
    parity(number, count_par, count_not_par)
except:
    print('Вы ввели не число!!!')