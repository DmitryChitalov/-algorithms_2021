"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def my_func(number):
    res = [0, 0]  # в список будем сохнанять на первую позицию четные числа

    if (number % 10) % 2 == 0:
        res[0] += 1
    else:
        res[1] += 1

    if number // 10 == 0:
        return res
    else:
        return list(map(lambda x, y: x + y, res, my_func(number // 10)))


user_input = my_func(int(input('Введите целое число: ')))
print(f'В вашем числе четных чисел: {user_input[0]} и нечетных чисел: {user_input[1]}')
