"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def count_number(num, count_div=0, count_mod=0):
    if num > 0:
        if num % 10 % 2 == 0:
            count_div += 1
        else:
            count_mod += 1
        count_number(num // 10, count_div, count_mod)
    else:
        print(f'Количество четных и нечетных цифр в числе равно: ({count_div}, {count_mod})')


try:
    count_number(int(input('Введите число: ')))
except:
    print(f'Ввели не правильное число! Попробуйте еще раз!')
    count_number(int(input('Введите число: ')))
