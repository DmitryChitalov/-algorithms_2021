"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def define_even_odds(number_to_define, even=0, odd=0):
    if number_to_define == 0:
        print(f"Кол-во чётных и нечётных чисел: {even}, {odd} ")
        return
    else:
        digit = number_to_define % 10
        number_to_define = number_to_define // 10
        if digit % 2 != 0:
            odd += 1
        else:
            even += 1
    return define_even_odds(number_to_define, even, odd)


number_to_define = define_even_odds(int(input('Введите число для подсчёта ')))
