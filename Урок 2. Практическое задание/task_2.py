"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def odd_and_even(num):
    global odd, even
    if num == 0:
        return
    if num % 10 & 1:
        odd += 1
    else:
        even += 1
    odd_and_even(num // 10)


while True:
    number = input('Введите целое число для подсчёта чётных и нечётных цифр:\n>>> ')
    if number.isdigit() and int(number) > 0:
        number = int(number)
        break
    print('Неверный ввод, попробуйте снова.')

odd = even = 0
odd_and_even(number)

print(f'четных {even} нечётных {odd}')
