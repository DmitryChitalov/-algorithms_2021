"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""
num = int(input('введите число'))
count_even = 0
count_odd = 0


def even_and_odd(num):
    global count_even
    global count_odd

    if len(str(num)) == 1:
        if num % 2 == 0:
            count_even += 1
        else:
            count_odd += 1
        return
    else:
        var_ = num % 10
        if var_ % 2 == 0:
            count_even += 1
        else:
            count_odd += 1
        num = int(str(num)[:-1])
        return even_and_odd(num)


even_and_odd(num)

print(f'в числе {num} {count_even} четных и {count_odd} нечетных числа')
