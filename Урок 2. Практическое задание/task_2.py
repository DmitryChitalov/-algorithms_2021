"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def f_calc_digits(p_in, even_cnt, odd_cnt):
    if p_in == 0:
        return (even_cnt, odd_cnt)

    if p_in % 2 == 1:
        odd_cnt += 1
    else:
        even_cnt += 1

    return f_calc_digits(p_in // 10, even_cnt, odd_cnt)


try:
    n = int(input('Введите число: '))
    print(f'Количество четных и нечетных цифр в числе равно: {f_calc_digits(n, 0, 0)}')
except ValueError:
    print("Вы вместо числа ввели строку (((. Исправьтесь")
