"""
4.	Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
Количество элементов (n) вводится с клавиатуры.
Пример:
Введите количество элементов: 3
Количество элементов: 3, их сумма: 0.75
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
Подсказка:
Каждый очередной элемент в 2 раза меньше предыдущего и имеет противоположный знак
"""

'''
    Утверждение.
    Пусть дан ряд чисел 1 -0.5 0.25 -0.125 ... . Пусть S_n - это сумма первых n элементов данного ряда,
где n = 2, 3, 4, ... .Тогда S_n = 1 - S_(n-1) / 2 .

    Доказательство:
    Будем доказывать утверждение ММИ по n.
    
    1) База индукции. При n = 2 очевидно. Пусть n = 3, следовательно
S_3 = 1 - 0.5 + 0.25 = 0.75 = 1 - 0.5 / 2. Для n = 4:
S_4 = 1 - 0.5 + 0.25 - 0.125 = 0.625 = 1 - 0.25 / 2.

    2) Предположение индукции. Предположим, что утверждение верно для всех n = k, k принадлежит множеству
натуральных чисел. Докажем для случая n = k + 1. 

    3) Шаг индукции.
S_k = 1 - S_(k-1) / 2.
S_(k+1) = 1 - 0.5 + 0.25 - ... + (-1)^{k} * x_k + (-1)^{k+1} * x_(k+1), где x_i - i-й элемент ряда,
i принадлежит множеству натуральных чисел. Тогда:
S_(k+1) = S_k + (-1)^{k+1} * x_(k+1) = S_k + (-1)^{k+1} * x_k / 2 = 1 - S_(k-1) / 2 + (-1)^{k+1} * x_k / 2 = [по п.и.] =
= 1 - S_k / 2, что и требовалось доказать. 
'''

def get_summ(count_of_numbers):
    if count_of_numbers == 1:
        return 1

    result = 1
    result += (-1) * (get_summ(count_of_numbers - 1) / 2)
    return result


while True:
    try:
        number = int(input('Введите натуральное число: '))
        if number <= 0:
            raise ValueError
        break
    except ValueError:
        print('Вводить можно лишь натуральные числа! Попробуйте еще раз.')

print(get_summ(number))


