"""4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
Количество элементов (n) вводится с клавиатуры.
Массив в этом задании строить не нужно!
Нужно решить без него!

Пример: Введите количество элементов: 3
Количество элементов: 3, их сумма: 0.75

Подсказка:
Каждый очередной элемент в 2 раза меньше предыдущего и имеет противопол. знак

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7"""


def sum_n_elems(count, elem=1):
    """Вычисляет сумму count-элементов ряда с элемента elem,
    на каждом последующем шаге <-start_value/2>
    Например: {1,-0.5, 0.25, -0.125, ...}"""

    # базовый случай - последний эл-т ряда
    if count == 1:
        # print(f'номер {count}, элемент {elem}')  # вывод номера и самого эл-та
        return elem

    # шаг рекурсии - суммируем текущий эл-т и сумму (count-1) эл-тов ряда
    # print(f'номер {count} , элемент {elem}')  # вывод номера и самого эл-та
    return elem + sum_n_elems(count - 1, -elem/2)


if __name__ == '__main__':

    # блок тестирования
    # print('Программа вычисляет сумму указанного кол-ва элементов ряда:\n'
    #       '{start_value, -start_value/2, start_value/4, ...}\n'
    #       'Например: {1, -0.5, 0.25, -0.125, ...}')
    # test_sets = (3, 1), (10, 1), (50, 1), (10, 666)
    # for cnt, start_val in test_sets:
    #     print(f'кол-во эл-тов: {cnt}, 1ый эл-т: {start_val}, '
    #           f'сумма: {sum_n_elems(cnt, start_val)}')

    # блок ручного тестирования
    print('Программа вычисляет сумму указанного кол-ва элементов ряда: '
          '{1, -0.5, 0.25, -0.125, ...}')
    try:
        cnt = abs(int(input("Введите кол-во эл-тов ряда: ")))
    except ValueError:
        print("Кол-во эл-тов должно быть целым числом!")
        exit(1)
    print(f'Сумма {cnt} элементов ряда (начиная с 1): {sum_n_elems(cnt)}')
