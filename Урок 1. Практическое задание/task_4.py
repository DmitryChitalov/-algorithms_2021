"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

users = {
    'user_1': {'password': 123, 'is_activated': True},
    'user_2': {'password': 456, 'is_activated': False},
    'user_3': {'password': 789, 'is_activated': True}
}


def authentication(login, password):
    """сложность O(1) потому что каждый шаг O(1)"""
    if login in users:
        if password != users[login]['password']:
            return 'Неверный пароль'
        elif password == users[login]['password']:
            if users[login]['is_activated']:
                return 'Аутентификация прошла успешно'
            else:
                return 'Учетная запись не активирована. Пройдите активацию'
    else:
        return 'Учетная запись с таким именем не существует'

print(authentication('user_1', 123))
print(authentication('user_1', 777))
print(authentication('user_2', 456))


def authentication(login, password):
    """сложность O(1), отличается от предыдущей тем, что сначала првоеряется активация, потом пароль"""
    if login in users:
        if users[login]['is_activated']:
            if password != users[login]['password']:
                return 'Неверный пароль'
            elif password == users[login]['password']:
                return 'Аутентификация прошла успешно'
        else:
            return 'Учетная запись не активирована. Пройдите активацию'
    else:
        return 'Учетная запись с таким именем не существует'


print(authentication('user_1', 123))
print(authentication('user_1', 777))
print(authentication('user_2', 456))

# Второй вариант кажется более преддпочтительным, потому что целесообразнее сначала проверить активацию, а затем пароль,
# потому что проверка активации проводится в любом случае. При неактивированной учетной записи во второй функции
# мы уже не должны проверять пароль. Хот сложность та же, и эффект будет незаметен.
