"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""


# №1 O(n)
def check_activ_1(dct, user):
    if dct[user][2] == 0:
        result = int(input(f'Учетная запись {user} не активирована! Нажмите "1", что активировать: '))
        if result == 1:
            result = f' Учетная запись {user} активирована! Пользователь может быть допущен к ресурсу!'
            dct[user].pop()
            dct[user].insert(2, 1)
        else:
            result = f' Учетная запись {user} не активирована! Пользователь не может быть допущен к ресурсу!'
    else:
        result = f' Учетная запись {user} активирована! Пользователь может быть допущен к ресурсу!'
    return result


# №2 O(n)
def check_activ_2(dct):
    user = int(input('Введите id пользователя: '))
    while dct[user][2] != 1:
        result = int(input(f'Учетная запись {user} не активирована! Нажмите "1", что активировать: '))
        if result == 1:
            result = f' Учетная запись {user} активирована! Пользователь может быть допущен к ресурсу!'
            dct[user].pop()
            dct[user].insert(2, 1)
        else:
            result = f' Учетная запись {user} не активирована! Пользователь не может быть допущен к ресурсу!'
            stop = input(f'Учетная запись {user} не была активирована! Нажмите "stop", если хотите прекратить: ')
            if stop == 'stop':
                break
    return result


users = {1: ['log1', 'pass1', 1], 2: ['log2', 'pass2', 0], 3: ['log3', 'pass3', 0]}

print(check_activ_1(users, 2))
print(check_activ_2(users))

"""
Оба решения имеют одинаковую сложность O(n), поэтому их эффективность будет одинакова.
"""