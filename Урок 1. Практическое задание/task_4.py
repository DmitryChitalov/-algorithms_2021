"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
account = {
    'login': "Gandalf",
    'password': "Middle-Earth",
    'is_active': False
}


def validate(lgn, pwd, lst):
    print('Первый вариант')
    if lgn == lst['login'] and pwd == lst['password']:
        if lst['is_active'] == True:
            print(f'Добро пожаловать, {lst["login"]}!')
        else:
            print('Пользователь заблокирован')
    elif lgn != lst['login'] or pwd != lst['password']:
        print("Логин или пароль введены неверно.")
    else:
        print('Такого пользователя не существует')


# Создано под второе решение
accounts = {
    'Gandalf': ['Middle-Earth', 1],
    'Frodo': ['My darling', 0]
}


def validate_alternative(lgn, pwd, lst):
    print('Второй вариант')
    if lgn in lst:
        if lst.get(lgn)[0] == pwd:
            if lst.get(lgn)[1] == 1:
                print(f'Добро пожаловать в Шир, {lgn}')
            else:
                print('Пользователь деактивирован')
        else:
            print('Пароль указан неверно')
    else:
        print('Пользователь с таким аккаунтов не найден')


validate(input('Login: '), input('Password: '), account)
validate_alternative(input('Login: '), input('Password: '), accounts)
