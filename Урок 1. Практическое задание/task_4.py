"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""


def check_1(login):
    # Сложность: O(n^2).
    if login in login_password:
        if login in login_activated:
            print("Введите пароль: ")
        else:
            print("Пройдите по ссылке для активации учетной записи.")
    else:
        print("Логин отсутствует. Зарегистрируйтесь.")


def check_2(login):
    # Сложность: O(n).
    if login_password.get(login):
        if login in login_activated:
            print("Введите пароль: ")
        else:
            print("Пройдите по ссылке для активации учетной записи.")
    else:
        print("Логин отсутствует. Зарегистрируйтесь.")


'''Второе решение эффективнее, ввиду использования метода get().'''

login_password = {"Ivan": "qwerty",
                  "Oleg": "12345",
                  "Olga": "olga",
                  "tapok": "00000",
                  "orel": "lero",
                  "iskra": "1986"
                  }

login_activated = ["Ivan", "Olga", "tapok", "iskra"]

check_1("Ivan")
check_1("orel")
check_1("ALEX")
print('#########')
check_2("Ivan")
check_2("orel")
check_2("ALEX")
