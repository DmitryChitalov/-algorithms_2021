"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
def gen_user():
    auth = {}
    for i in range(2):
        name = f'Имя_{i}'
        password = f'password_{i}'
        if i % 3 == 0:
            active = True
        else:
            active = False
        auth[name] = {'Имя': name, 'пароль': password, 'Активирован': active}
    return auth

users = gen_user()
print(users)

log = "Имя_0"
passw = "password_0"


def auth_1(log, passw):

        # Сложность О(N)

        if log in users.keys():  # O(N)
            if passw == users[log]["пароль"]:  # O(1)
                if users[log]['Активирован'] == True: # O(1)
                    print("Добро пожаловать") # O(1)
                else:
                    print("Активируйте учетку") # O(1)
            else:
                print("Wrong password") # O(1)
        else:
            print("No user found") # O(1)


def auth_2(log, passw):
    # Сложность О(N**2)
 i = 0
 while(i in range(len(users))): # O(N)
    if log in users.keys():  # O(N)
        if passw == users[log]["пароль"]:  # O(1)
            if users[log]['Активирован'] == True:  # O(1)
                print("Добро пожаловать")  # O(1)
                break # O(1)
            else:
                print("Активируйте учетку")  # O(1)
        else:
            print("Wrong password")  # O(1)
    else:
        print("No user found")  # O(1)
    i += 1 # O(1)

auth_1(log, passw)
auth_2(log, passw)
"""второй способ по скорости равен или больше первого. При варианте, что будет заходить пользователь, который хранится в
сисетме под user_0, скорость рабооты двух способов должна быть равной. В остальных случаях, второй способ проигрывает"""
