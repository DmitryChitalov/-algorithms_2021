"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""
storage = [['fNaFfKa_14', 'a6dFsh7o', 1], ['Cofee4ek', '123456', 1],
           ['ЧеЛ_В_НаУшНиКаХ', 'qwerty111', 0], ['ПростоЯ', 'CVsg6DDj', 1],
           ['Memasyan', 'qweasdzxc', 0], ['сhосо bаbе', '3452672', 0],
           ['Ketu', 'wewewe', 1], ['ReySer', 'Wdf5Fwr6', 1]]


def checking(user_login, user_password, list_storage):
    for i in list_storage:                                                # О(n)
        if user_login == i[0] and user_password == i[1] and i[2] == 1:    # О(1)
            print('Доступ разрешен')                                      # О(1)
            return True                                                   # О(1)
        elif user_login == i[0] and user_password == i[1] and i[2] == 0:  # О(1)
            print('Выполните активацию учетной записи')                   # О(1)
            return False                                                  # О(1)
    print('Проверьте правильность ввода пароля и логина')                 # О(1)
    return False                                                          # О(1)

# Сложность: О(n)


checking('ЧеЛ_В_НаУшНиКаХ', 'dsds', storage)
checking('ЧеЛ_В_НаУшНиКаХ', 'qwerty111', storage)
checking('ПростоЯ', 'CVsg6DDj', storage)
checking('}{akep', 'admin', storage)


def checking_2(user_login, user_password, list_storage):
    for i in list_storage:                                                # О(n)
        for j in i:                                                       # О(n)
            if j == user_login and i[1] == user_password:                 # О(1)
                if i[2] == 0:                                             # О(1)
                    print('Выполните активацию учетной записи')           # О(1)
                    return False                                          # О(1)
                else:
                    print('Доступ разрешен')                              # О(1)
                    return True                                           # О(1)
    print('Проверьте правильность ввода пароля и логина')                 # О(1)
    return False                                                          # О(1)

# Сложность: О(n^2)

# Вывод: первое решение эффективнее по O-нотации


checking_2('ЧеЛ_В_НаУшНиКаХ', 'dsds', storage)
checking_2('ЧеЛ_В_НаУшНиКаХ', 'qwerty111', storage)
checking_2('ПростоЯ', 'CVsg6DDj', storage)
checking_2('}{akep', 'admin', storage)
