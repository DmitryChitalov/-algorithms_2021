"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

users_bases = {'oleg': {'password': 123, 'active_mod': 1}, 'olga': {'password': 321, 'act': 0}}


# 1.Вариант - сложность O(N)

def get_check_user(user_bases, user, user_password):
    for key, val in user_bases.items():  # O(n)
        if key == user:  # O(1)
            if val['password'] == user_password and val['active_mod'] == 1:  # O(1)
                return print(f'Успешная авторизация')  # O(1)
            elif val['password'] == user_password and val['active_mod'] == 0:  # O(1)
                return print(f'Вам необходимо пройти авторизацию!')  # O(1)
            else:
                return print(f'Пароль неверный!')  # O(1)
        else:
            return print(f'Пользователь не найдем!')  # O(1)


# 2.Вариант - сложность O(1)

def get_check_user2(user_bases, user, user_password):
    if user_bases.get(user) is None:  # O(1)
        return print(f'Пользователь не найдем!')  # O(1)
    else:
        if user_bases[user]['password'] == user_password and user_bases[user]['active_mod'] == 1:  # O(1)
            return print(f'Успешная авторизация')  # O(1)
        elif user_bases[user]['password'] == user_password and user_bases[user]['active_mod'] == 0:  # O(1)
            return print(f'Вам необходимо пройти авторизацию!')  # O(1)
        else:
            return print(f'Пароль неверный!')  # O(1)


"""Вариант 2 являтся более оптимальным, т.к отсутсвует перебор по циклу, а поиск идет по ключ - значение, т.е
используется хэш таблица  
"""
