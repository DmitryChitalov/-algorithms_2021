"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

user_information = {'berserk_1': ('qwerty1234', True),
                    'king_of_geeks': ('Asdfgh321', False)}


"""
Первый вариант: O(n)
так как максимальную величина сложности определяется здесь циклом for.
Условнуе ветки имеют сложность константную
"""


def check_user(dict_in, user, password):
    for key, val in dict_in.items():
        if key == user:
            if password == val[0]:
                if val[1]:
                    return 'Добро пожаловать!'
                else:
                    return 'Учетная запись неактивирована!'
            else:
                return 'Неверный пароль!'
    return 'Пользователь не найден!'


"""
Второй вариант: O(1)
Здесь используется метод get(), который имеет константную сложность.

Естественно данный вариант будет эффективней первого.
"""


def check_user_2(dict_in, user, password):
    if dict_in.get(user):
        if password == dict_in[user][0] and dict_in[user][1]:
            return 'Добро пожаловать!'
        elif password != dict_in[user][0]:
            return 'Неверный пароль!'
        else:
            return 'Учетная запись неактивирована!'
    else:
        return 'Пользователь не найден!'


print(check_user_2(user_information, 'berserk_1', 'qwerty1234'))
print(check_user_2(user_information, 'king_of_geeks', 'qwerty1234'))
print(check_user_2(user_information, 'king_of_geeks', 'Asdfgh321'))
