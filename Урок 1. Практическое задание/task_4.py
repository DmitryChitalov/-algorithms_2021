"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""
users = {'megalord': ['1234', 0], 'doser': ['1111', 0], 'pumpa95': ['9999', 1]}

# 1 функция - линейная сложность, O(n).
def check_users(login, password):
    if login in users and password in users[login]:
        if users[login][1] == 0:
            return 'Пожалуйста,в ближайшее время активируйте учетную запись.'
        else:
            return 'Вход выполнен.'
    else:
        return 'Неверный пароль или логин.'

print(check_users('megalord', '1234'))
print(check_users('pumpa95', '9999'))
print(check_users('megalord', '1231'))
print(check_users('megalorda', '1231'))
print()

# вторая функция - квадратичная сложность O(n^2).
def check_users_2(login, password):
    num = 0
    for i in users:
        num += 1
        for z in users[i]:
            if login == i:
                if password == z:
                    if users[login][1] == 1:
                        return 'Вход выполнен.'
                    else:
                        return 'Пожалуйста,в ближайшее время активируйте учетную запись.'
                else:
                    return 'Неверный пароль.'
            elif num == len(users):
                return 'Неверный логин.'

print(check_users_2('megalord', '1234'))
print(check_users_2('pumpa95', '9999'))
print(check_users_2('megalord', '1231'))
print(check_users_2('megalorda', '1231'))

# Первая функция эффективней, так как в ней по очереди осуществляются два поиска, во второй же используются
# два цикла один в другом, из-за чего ее сложность становится квадратичной.