"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""

def gen_user():
    auth = {}
    for i in range(1000000):
        name = f'name_{i}'
        password = f'password_{i}'
        if i % 3 == 0:
            active = True
        else:
            active = False
        auth[name] = {'name': name, 'password': password, 'active': active}
    return auth

users = gen_user()


# first option
# Сложность O(n)
def check(users: dict, user):
    for u in range(len(users)):                                                                       # O(n)
        if users[user]['active'] == True:                                                   # O(1)
            return f'пользователь допущен к ресурсу'                                        # O(1)
        else:
            while users[user]['active'] != True:
                print('Учетная запись не активирована. Доступ к ресурсу запрещен!')
                answer = input(f'Активировать учетную запись {users[user]["name"]} (yes/no):')  # O(1)
                if answer.lower() == 'yes' or 'нуы':                                            # O(1)
                    users[user]['active'] = True                                                # O(1)
                    cnt = 3                                                                     # O(1)
                    while cnt > 0:                                                              # O(n)
                        password = input(f'Введите пароль(попыток {cnt}): ')                    # O(1)
                        if password == users[user]['password']:                                 # O(1)
                            return f'Учетная запись активирована. Доступ разрешен!'             # O(1)
                        else:
                            cnt -= 1                                                            # O(1)
                if answer.lower() == 'no' or 'тщ':                                              # O(1)
                    return f'Доступ закрыт'                                                     # O(1)



# second option
# Сложность O(1)
def check2(users: dict, user):
    while users[user]:
        if users[user]['active'] == True:
            return f'Добро пожаловать'
        if len(input('Учетная запись не активирована.\nДля активации введите любой символ: ')) > 0:
            users[user]['active'] = True




print(check(users, 'name_100000'))

print(check2(users, 'name_100000'))


