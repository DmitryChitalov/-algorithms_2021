"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""
# 1 решение
account = {
    'login': 'user',
    'password': 'passw',
    'activation': True
}

user = {
    'login': 'user',
    'password': 'passw',
    'activation': True
}

def login_1(user: dict):                                                                    # O(1)
    if user['activation'] == True:                                                          # O(1)
        if user['login'] == account['login'] and user['password'] == account['password']:   # O(1)
            return 'ОК'                                                                     # O(1)
        else:                                                                               # O(1)
            return 'Неверный логин или пароль'                                              # O(1)
    else:                                                                                   # O(1)
        return 'Пройдите активацию'                                                         # O(1)

print(login_1(user))

# 2 решение
def login_2(user:dict):                                     # O(1)
    if user['login'] == account['login'] and \
            user['password'] == account['password'] and \
            user['activation'] == True:                     # O(1)
        return 'ОК'                                         # O(1)
    elif user['login'] == account['login'] and \
            user['password'] == account['password'] and \
            user['activation'] == False:                    # O(1)
        return 'Пройдите активацию'                         # O(1)
    else:                                                   # O(1)
        return 'Неверный логин или пароль'                  # O(1)

print(login_2(user))

# 3 решение
def login_3(user: dict):                        # O(N)
    if user['activation'] == True:              # O(1)
        if account == user:                     # O(N)
            return 'ОК'                         # O(1)
        else:                                   # O(1)
            return 'Неверный логин или пароль'  # O(1)
    else:                                       # O(1)
        return 'Пройдите активацию'             # O(1)

print(login_3(user))

"""
Первые два решения самые эффективные, потому что они константные,
а 3 решение ленейное из-за перебора словарей и ялвяется менее эффективным, чем первые два.
"""