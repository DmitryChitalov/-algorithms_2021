"""
Задание 5.
Задание на закрепление навыков работы со стеком

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.

После реализации структуры, проверьте ее работу на различных сценариях

Подсказка:
Отдельне стопки можно реализовать через:
1) созд-е экземпляров стека (если стопка - класс)
или
2) lst = [[], [], [], [],....]

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""


class StackClass:
    def __init__(self):
        self.stack = [[], [], []]

    def push_in(self, el):
        for i in range(len(self.stack)):
            if len(self.stack[i]) < 5:
                self.stack[i].append(el)
                break

    def pop_out(self):
        self.stack.pop()

    def show_full_stack(self):
        print(self.stack)

    def show_some_stack(self):
        number_stack = int(input('Всего 3 стопки. Какую смотрим?'))
        for el in self.stack[number_stack - 1]:
            print(el, sep='/n')

    def stack_size(self):
        count = 1
        for i in self.stack:
            print(f'В {count} стопке {len(i)} тарелок')
            count += 1


