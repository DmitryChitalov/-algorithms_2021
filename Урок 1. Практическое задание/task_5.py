"""
Задание 5.
Задание на закрепление навыков работы со стеком

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.

После реализации структуры, проверьте ее работу на различных сценариях

Подсказка:
Отдельне стопки можно реализовать через:
1) созд-е экземпляров стека (если стопка - класс)
или
2) lst = [[], [], [], [],....]

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""


class Stack:
    """
    Стопка тарелок
    """

    def __init__(self):
        self.stack = []

    def push(self, item):
        """
        Добвыление тарелки в стопку.
        Максимальная стопка 5 тарелок.
        """
        new_list = []
        if len(self.stack) == 0:
            self.stack.append(new_list)
        if len(self.stack[len(self.stack) - 1]) < 5:
            self.stack[len(self.stack) - 1].append(item)
        else:
            new_list.append(item)
            self.stack.append(new_list)

    def pop(self):
        """
        Удаление последней добавленой тарелки
        """
        if not self.stack:
            self.stack = 'Стопка пустая'
        else:
            self.stack[len(self.stack) - 1].pop()
            if not self.stack[len(self.stack) - 1]:
                self.stack.pop()

s = Stack()
s.push(1)
s.push(2)
s.push(3)
s.push(4)
s.push(5)
s.push(6)
print(s.stack)
s.pop()
print(s.stack)
