"""
Задание 5.
Задание на закрепление навыков работы со стеком

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.

После реализации структуры, проверьте ее работу на различных сценариях

Подсказка:
Отдельне стопки можно реализовать через:
1) созд-е экземпляров стека (если стопка - класс)
или
2) lst = [[], [], [], [],....]

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""


class StackClass:
    """Стопка тарелок. Максимальная высота стопки задается при создании экземпляра."""

    def __init__(self, max_elems):
        self.max_elems = max_elems
        self.elems = []

    def is_full(self):
        """Полна ли уже стопка тарелок?"""
        return len(self.elems) == self.max_elems

    def push_in(self, plate_name):
        """Предполагаем, что верхний элемент стека находится в конце списка"""
        self.elems.append(plate_name)

    def stack_size(self):
        """Сколько тарелок в стопке?"""
        return len(self.elems)

    def stack_show(self):
        """Содержимое стопки"""
        return self.elems


if __name__ == '__main__':

    MAX_PLATES_PER_STACK = 10
    PLATES_CNT = 35
    STACKS = [StackClass(MAX_PLATES_PER_STACK)]

    # Раскладываем тарелки
    for plate in range(PLATES_CNT):
        if STACKS[-1].is_full():
            STACKS.append(StackClass(MAX_PLATES_PER_STACK))
        STACKS[-1].push_in(f'Plate_{plate}')

    # Выводим все стопки тарелок на экран
    for stack in STACKS:
        print(stack.stack_show())

    # узнаем количество тарелок
    print(f'Всего тарелок: {(len(STACKS) - 1) * STACKS[0].stack_size() + STACKS[-1].stack_size()}')
