"""
Задание 5.
Задание на закрепление навыков работы со стеком
Реализуйте структуру "стопка тарелок".
Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.
Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.
После реализации структуры, проверьте ее работу на различных сценариях
Подсказка:
Отдельне стопки можно реализовать через:
1) созд-е экземпляров стека (если стопка - класс)
или
2) lst = [[], [], [], [],....]
Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""


class PlateStack:
    def __init__(self, max_elems):
        self.max_elems = max_elems
        self.elems = []

    def stack_size(self):
        return len(self.elems)

    def is_full(self):
        return len(self.elems) == self.max_elems

    def push_in(self, plate_name):
        self.elems.append(plate_name)

if __name__ == '__main__':

    MAX_PLATES = 25
    COUNT = 40
    STACKS = [PlateStack(MAX_PLATES)]

    for plate in range(COUNT):
        if STACKS[-1].is_full():
            STACKS.append(PlateStack(MAX_PLATES))
        STACKS[-1].push_in(f'Plate_{plate}')

    print(f'Всего тарелок: {(len(STACKS) - 1) * STACKS[0].stack_size() + STACKS[-1].stack_size()}')