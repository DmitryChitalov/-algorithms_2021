"""
Задание 5.
Задание на закрепление навыков работы со стеком

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового значения.
Реализуйте по аналогии с примером, рассмотренным на уроке, необходимые методы,
для реализации это структуры, добавьте новые методы (не рассмотренные в примере с урока)
для реализации этой задачи.

После реализации структуры, проверьте ее работу на различных сценариях

Подсказка:
Отдельне стопки можно реализовать через:
1) созд-е экземпляров стека (если стопка - класс)
или
2) lst = [[], [], [], [],....]

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

class Stack:
    def __init__(self):
        self.elements = []

    def is_empty(self):
        return self.elements == []

    def push_in(self):
        self.elements.append(el)

    def pop_out(self):
        return self.elements.pop()

    def get_val(self):
        return self.elements[len(self.elements) - 1]

    def stack_size(self):
        return len(self.elements)


def plates_stack(plates_qty):
    stack_obj = Stack()

    while plates_qty > 0:
        stacks_num = plates_qty / 10        # количество тарелок в одном стеке: 10
        stack_obj.push_in(stacks_num)

    plates = ""
    while not stack_obj.is_empty():
        plates = plates + str(stack_obj.pop_out())

    return plates


print(plates_stack(19))