"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

company = {'ООО Рога и Копыта': 15230,
           'ООО Вектор': 24550,
           'ООО Самый лучший банк': 15000,
           'ООО Пельменная': 7630,
           'ООО Пирамида': 20456}

# 1.Вариант: через сортировку функцией sort() и срез последних трех значений:
arr = list(company.items())  # O(n)
arr.sort(key=lambda i: i[1])  # n log n (линейно логарифмическая)
print(f' 1.Вариант: {arr[-3:]}')

# 2.Вариант: через сортировку значений пузырьком
arr = list(company.items())  # O(n)
for i in range(len(arr) - 1):
    for j in range(len(arr) - i - 1):
        if arr[j][1] > arr[j + 1][1]:
            arr[j], arr[j + 1] = arr[j + 1], arr[j]  # O(n^2) (квадратичная)
print(f' 2.Вариант: {arr[-3:]}')

# Вриант 1 предпочтительнее, т.к. имеет в основе линейно логарифмическую функцию, в отличии от квадратичной в варианте 2
