""" Домашнее задание к уроку №1 курс Алгоритмы и структуры данных на Python
    студент: Максим Сапунов Jenny6199@yandex.ru
    26.05.2021
"""

# Задание 3.
# Для этой задачи:
# 1) придумайте 2-3 решения (не менее двух)
# 2) оцените сложность каждого решения в нотации О-большое
# 3) сделайте вывод, какое решение эффективнее и почему
# Сама задача:
# Имеется хранилище с информацией о компаниях: название и годовая прибыль.
# Для реализации хранилища можно применить любой подход,
# который вы придумаете, например, реализовать словарь.
# Реализуйте поиск трех компаний с наибольшей годовой прибылью.
# Выведите результат.
# Примечание:
# Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
# через строки документации в самом коде.
# Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
# Задание творческое. Здесь нет жестких требований к выполнению.


def top_3_in_profit_v1(database: dict):
    """ Функция сортирует полученную базу данных по значению и выводит три записи
    с наибольшими значениями
    :param - база данных (ключ - название компании, значение - прибыль).
    :return - список лидирующих компаний.
    Сложность алгоритма: 6+N**2**(N*logN)+N   O(N**2**N*logN) т.е. неудачный.
    """
    top_company = []                                            # O(1)
    i = 0                                                       # O(1)
    while i < len(database):                                    # O(N)
        for key, value in database.items():                       # O(N)
            if value == sorted(database.values())[i]:               # O(N*logN)
                top_company.append(key)                         # O(1)
        i += 1                                                  # O(1)
    for value in top_company[-3:]:                              # O(N)
       print(f'{value}, прибыль: {database[value]}.')           # O(1)
    return top_company[-3:]                                     # O(1)


company_database = {
    'Sunlight': 4300000,
    'Metal gear': 3000000,
    'New world': 1000000,
    'Nemo action': 50000,
    'New horizons': 2300000,
    'Crocodile': 5134000,
    'Pumping iron': 850000
}

if __name__ == '__main__':
    top_3_in_profit_v1(company_database)
