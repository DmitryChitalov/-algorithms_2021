"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


def comp_1(val: dict):  # O(N^2)
    ls = []
    for item in val.values():  # O(N)
        ls.append(item)  # O(1)
    ls.sort(reverse=True)  # O(N log N)
    comp = []
    for el in val:  # O(N)
        if val.get(el) in ls[:3]:  # O(N)
            comp.append(el)  # O(1)
    return comp


def comp_2(val: dict):  # O(N^2 log N)
    val_sorted = [k for k in sorted(val, key=val.get, reverse=True)]  # O(N^2 log N)
    return val_sorted[:3]  # O(3)


def comp_3(val: dict):  # O(3*N)
    """Данное решение наиболее эффективное, используется наименьшее количество операций"""
    max_dict = []
    res_dict = []
    for _ in range(3):  # O(3)
        max_dist = list(max(val.items(), key=lambda f: f[1]))  # O(N)
        res_dict.append(str(max_dist[0]))  # O(1)
        del val[max_dist[0]]  # O(1)
    return res_dict


company_list = {"МТС": 51000, "Ростелеком": 34000, "Билайн": 42000, "Мегафон": 65000, "Теле-2": 18000}
print(comp_1(company_list))
print(comp_2(company_list))
print(comp_3(company_list))
