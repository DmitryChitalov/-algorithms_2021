"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух) разной!! сложности
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

# O(n log n)
comp_stor = {
    'huawei': 2000,
    'intel': 800,
    'amd': 1200,
    'nvidia': 1500,
    'apple': 300
    }
all_income = [income for income in comp_stor.values()] # O(n)
all_income.sort() # O(n log n)
print(all_income[-1:-4:-1])


#####################################################################################################
""" Если O(7n) = O(n), то выходит, это решение является более эффективным, так как его
сложность O(n) и оно "slower-growing" (английские слова взяты с просторов интернета)
"""

# O(n)
comp_stor = {
    'huawei': 2000,
    'intel': 800,
    'amd': 1200,
    'nvidia': 1500,
    'apple': 300
    }

all_income = [income for income in comp_stor.values()] # O(n)
top_1 = max(all_income)  # O(n)
all_income.remove(top_1) # O(n)
top_2 = max(all_income)  # O(n)
all_income.remove(top_2) # O(n)
top_3 = max(all_income)  # O(n)
all_income.remove(top_3) # O(n)
print(top_1, top_2, top_3)
