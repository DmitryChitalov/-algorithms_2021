"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
info = {"Company1":5000, "Company2":1000, "Company3":10000, "Company4":15000, "Company5":5001}

# O (n log n)
def func1(data):
    list1 = [] #O(l)
    for i, j in data.items(): #O(l)
        list1.append(j) #O(l)
    list1.sort(reverse=True) #O(n log n)
    while len(list1) > 3: #O (l)
        list1.pop() #O (l)
    return list1

#
def func2(data):
    list1 = []  # O(1)
    data_keys = list(data.keys())  # O(n)
    data_values = list(data.values())  # O(n)
    i = 0
    while i < 3:  # O(1)
        max_index = data_values.index(max(data_values))  # O(n)
        list1.append(data_values[max_index])  # O(1)
        data_values.pop(max_index)  # O(1)
        data_keys.pop(max_index)  # O(1)
        i += 1
    return list1

print(func1(info))
print(func2(info))


