"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух) разной!! сложности
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""


def check_profit_1(dict_obj):
    """ Сложность функции O(N**2)"""
    sorted_values = sorted(dict_obj.values(), reverse=True)  # O(NlogN)
    result = []  # O(1)
    for i in sorted_values:  # O(N)
        for j in dict_obj.keys():  # O(N)
            if dict_obj[j] == i:  # O(1)
                result.append(j)  # O(1)
    return result[:3]  # O(1)


def check_profit_2(dict_obj):
    """ Сложность функции O(NlogN),
    данная функция имеет линейно-логарифмическую сложность,
    поэтому она предпочтительнее функции check_profit_1, имеющей квадратичную сложность"""
    result = sorted(dict_obj, key=dict_obj.get, reverse=True) # O(NlogN)
    return result[:3]










test_dict = {"asd": 5, "two": 8, "three": 1, "four": 3}

print(check_profit_1(test_dict))
print(check_profit_2(test_dict))

