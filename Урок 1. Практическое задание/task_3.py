"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

companies = {
    "BMW": 11282,
    "Audi": 8912,
    "KIA": 5291,
    "Opel": 3254,
    "Mercedes": 10242
}

# Сложность данной функции: O(1) - Константа
def max_profit_1(company):
    lst = list(company.items())
    for i in range(3):
        c = max(companies, key=companies.get)
        print(c, companies.pop(c))


companies_2 = {
    "Volvo": 1221,
    "Lada": 5123,
    "Subaru": 3245,
    "Opel": 2385,
    "Suzuki": 8215
}

# Сложность данной функции: O(n log n) - Линейно-логарифмическая

def max_profit_2 (company):
    lst = list(company.items())
    lst.sort(key=lambda i: i[-1])
    return lst[2:len(lst)]



print(max_profit_1(companies))
print(max_profit_2(companies_2))

# Целесообразно использовать первую функции, так как она менее сложная.
