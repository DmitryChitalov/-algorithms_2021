"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
array = [{'badcompany': 16707}, {'Jameson': 86266}, {'Jacobson': 34467}, {'Marycey': 64137}]


sorted_pairs = sorted(((k, v) for d in array for k, v in d.items()),
                     key=lambda pair: pair[1], reverse=True)

from collections import OrderedDict

output = OrderedDict()
for k, v in sorted_pairs:
    if k not in output:
        output[k] = v
        if len(output) == 3:
            break
print (output)
# O(n**3)




output = {k: d[k] for e, d in enumerate(sorted(
    array, key=lambda d: next(d[k] for k in d), reverse=True)) for k in d if e < 3}
print(output)
#O(nlogn)

#2 вариант решения эффективнее,так как минимальная сложность.







