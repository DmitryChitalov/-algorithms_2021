"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

companies = {
    'comp1': 500,
    'comp2': 400,
    'comp3': 100,
    'comp4': 900,
    'comp5': 300,
    'comp6': 700
}


# Сложность O(n), где n = len(argument)
def maximum_1(argument):
    result = {}  # O(1)
    list_input = list(argument.items())  # O(n)
    for i in range(3):
        maximum = max(list_input, key=lambda _: _[1])  # O(n)
        list_input.remove(maximum)  # O(n)
        result[maximum[0]] = maximum[1]  # O(1)
    return result  # O(1)


# Сложность O(n × log n), где n = len(argument)
def maximum_2(argument):
    result = {}  # O(1)
    list_input = list(argument.items())  # O(n)
    list_input.sort(reverse=True, key=lambda _: _[1])  # O(n × log n)
    for i in range(3):
        result[list_input[i][0]] = list_input[i][1]  # O(1)
    return result  # O(1)


print(maximum_1(companies))
print(maximum_2(companies))
