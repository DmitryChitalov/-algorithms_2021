"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
firm = {
'cars': 2000,
'flowers': 300,
'drums': 550,
'adiddas': 4000,
'restore': 5000,
'petshop': 400
}

#Сложность этой функции О(n)

def max_revenue(inp):
    max_rev = {}
    list_dict = dict(inp)
    for i in range(3):
        maximum = max(list_dict.items(), key=lambda k_v: k_v[1])
        del list_dict[maximum[0]]
        max_rev[maximum[0]] = maximum[1]
    return max_rev

print(max_revenue(firm))

#Сложность этой функции О(logn)

lst_from_dict = list(firm.items())
lst_from_dict.sort(key=lambda i: i[1], reverse=True)
for i in range(3):
    print(lst_from_dict[i][0], ';')
