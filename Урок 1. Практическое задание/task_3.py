"""
Задание 3.
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
"""

profit_comp = {
    'маслосырбаза': 5,
    'главрыба': 9,
    'промпредсвет': 4,
    'заклинингмозг': 7,
    'ишимкосмос': 2,
    'автонас': 24
}
print('=' * 50)

# ---------------------------------------------------------------------------------------------
# Решение № 1. Создание списка кортежей с последующей сортировкой и выводом среза.

list_profit_comp = list(profit_comp.items())                    # O(n) * O(1)
list_profit_comp.sort(key=lambda i: i[1])                       # O(n * log n)
print(list_profit_comp[-1:-4:-1])                               # O(n)
print('=' * 50)

# O(n) + O(n * log n) + O(n) = O(n * log n)
# Сложность - линейно-логарифмическая

# ---------------------------------------------------------------------------------------------
# Решение № 2. Вывод данных из словаря по созданному списку 3-х наибольших значений,

list_val = []                                                   # O(1)
for val in profit_comp.values():                                # O(n)
    list_val.append(val)                                        # O(1)

hi_profit = []                                                  # O(1)
i = 0                                                           # O(1)
while i < 3:                                                    # O(1) /предел - известен/
    hi_profit.append(max(list_val))                             # O(1) * O(n)
    list_val.remove(max(list_val))                              # O(1) * O(n)
    i += 1                                                      # O(1)

for item in profit_comp.items():                                # O(n)
    if item[1] in hi_profit:                                    # O(1)
        print(f'{item[0]} - {item[1]}')                         # O(1)

print('=' * 50)

# 8 * O(1) + O(4 * n) = O(n)
# Сложность - линейная.

# ----------------------------------------------------------------------------------------------
# Решение № 3. Тройной обход (1-е, 2-е, 3-е места) списка кортежей с выявлением максимального
# значения кортежа с последующим удалением его из списка.

list_profit_comp = list(profit_comp.items())                    # O(n) * O(1)
for i in range(3):                                              # O(1) /значение range известно/
    j = 0                                                       # O(1)
    max_profit_comp = list_profit_comp[0]                       # O(1)
    while j < len(list_profit_comp):                            # O(n)
        if max_profit_comp[1] < list_profit_comp[j][1]:         # O(1)
            max_profit_comp = list_profit_comp[j]               # O(1)
        j += 1                                                  # O(1)
    print(max_profit_comp)                                      # O(1)
    list_profit_comp.remove(max_profit_comp)                    # O(1)

# O(n) + (O(1) * (4 * O(1) + O(n) * (3 * O(1)) = O(n)
# Сложность - линейная.

'''
Как ни странно, решение с использованием сортировки, имеющее линейно-логарифмическую сложность 
получается (если п.2 задания решен верно) в 5 раз менее эффективно чем решения на основе обхода 
списков в циклах, которые имеют линейную сложность.  

Но всеже я думаю что первое решение имеет право на жизнь, ввиду восприятия и простоты кода. 
'''










