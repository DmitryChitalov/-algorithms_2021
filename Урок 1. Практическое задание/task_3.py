"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""

accounting_dict = {'adidas': 1000000, 'puma': 6000000, 'reebok': 3000000, 'nike': 4000000}

# Сложность: O(nlogn) - линейно-логарифмическая
def max_profit_1(accounting):
    return sorted(accounting, key=accounting.get)[-1:-4:-1] # O(nlogn) - линейно-логарифмическая

print(*max_profit_1(accounting_dict))

# Сложность: # O(7n) - линейная
def max_profit_2(accounting):
    temp_accounting = dict(accounting)                                      # O(n) - линейная
    max_profit = []                                                         # O(1) - константная
    for _ in range(3):                                                      # O(3) - константная
        max_profit.append(max(temp_accounting, key=temp_accounting.get))    # O(n) - линейная
        temp_accounting.pop(max(temp_accounting, key=temp_accounting.get))  # O(n) - линейная
    return max_profit                                                       # O(1) - константная


print(*max_profit_2(accounting_dict))


""" Второй метод эффективнее, т.к. сложность алгоритма ниже, несмотря на худшую читаемость кода"""