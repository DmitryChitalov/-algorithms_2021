"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""


company_info = {
    'Tesla': 1234,
    'Windows': 2341,
    'Apple': 3412,
    'Amazon': 4123,
    'Facebook': 4321,
    'BMW': 1432,
    'Mercedes': 2143,
    'Audi': 3214
}
# Решение № 1 Самое очевидное для мне решение, использовал сортировку при помощи лямба функции.
# Сложность - O(n log n) функиця линейно логарифмическая, объективно не лучший вариант для машины.


my_list2 = list(company_info.items())
my_list2.sort(key=lambda i: i[1], reverse=True)
for i in range(3):
    print(my_list2[i][0], ':', my_list2[i][1])

# Решение № 2, квадратичная функция, самый тяжёлый вариант для машины, сложность O(n^2)


def sorted_func(input_list):
    for i in range(len(input_list)):
        min_index = i
        for j in range(i+1, len(input_list)):
            if input_list[j][1] > input_list[min_index][1]:
                min_index = j
        input_list[i], input_list[min_index] = input_list[min_index], input_list[i]
    return input_list[0:3]


my_list = list(company_info.items())
for i in sorted_func(my_list):
    print(i[0], ':', i[1])

# Решение № 3, Самое эффективное(но для меня не самое очевидное)
# решение(линейная функция), так как его сложность по нотации O большое - O(n)
# Лямба функиця при сортировке творит чудеса =)


def max_income(company_list):
    input_max = {}
    list_d = dict(company_list)
    for i in range(3):
        maximum = max(list_d.items(), key=lambda k_v: k_v[1])
        del list_d[maximum[0]]
        input_max[maximum[0]] = maximum[1]
    return input_max


print(max_income(company_info))
