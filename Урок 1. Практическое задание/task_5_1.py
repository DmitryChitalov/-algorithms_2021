"""
Задание 5.
Задание на закрепление навыков работы со стеком

Реализуйте структуру "стопка тарелок".

Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.

Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим стеком порогового
значения. Реализуйте по аналогии с примером, рассмотренным на уроке,
необходимые методы, для реализации это структуры, добавьте новые методы (не
рассмотренные в примере с урока) для реализации этой задачи.
После реализации структуры, проверьте ее работу на различных сценариях

Подсказка:
Отдельне стопки можно реализовать через:
1) созд-е экземпляров стека (если стопка - класс)
или
2) lst = [[], [], [], [],....]

Примечание: в этом задании вспомните ваши знания по работе с ООП
и опирайтесь на пример урока

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Задание творческое. Здесь нет жестких требований к выполнению.
"""


def add_elem(store, *args):
    last_stack = store[-1]
    for el in args:
        # если текущий стек еще не полный
        if len(last_stack) < MAX_HEIGHT:
            last_stack.append(el)  # добавляем в него эл-т
            continue               # и идем за следующим

        # если текущий стек уже заполнился
        store.append([])           # добавляем в конец хранилища новый
        last_stack = store[-1]     # привязываемся к новому последнему стеку
        last_stack.append(el)      # добавляем эл-т в него и идем за след. эл.


if __name__ == '__main__':
    # инициализация
    MAX_HEIGHT = 3                     # задаем "высоту" стеков в хранилище
    storage = [[]]                     # заводим хранилище с пустым стеком
    test_set = [i for i in range(10)]  # тестовый набор

    # Тесты и печать
    add_elem(storage, *test_set)
    print(storage)

    add_elem(storage, *test_set)
    print(storage)
