import heapq

"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.Выведите результат.
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""

companies = {'Auchan': 420000,
             'Tander': 845000,
             'Lenta': 484900,
             'Okey': 299000,
             'Dixy': 377750,
             'Agrotorg': 710900}

# Решение №1 Сложность - O(n log n)
print(list(sorted(companies.items(), key=lambda item: item[1], reverse=True))[:3])

# Решение №2 Сложность - O(n log n)
print(heapq.nlargest(3, companies.items(), key=lambda item: item[1]))

# Решение №3 Сложность - O(n) или O(mn), где m - кол-во компаний, которое надо вывести
result = {}
items = companies.items()
for i in range(3):
    max_value = max(filter(lambda item: result.get(item[0]) is None, items), key=lambda item: item[1])
    result[max_value[0]] = max_value[1]
print(result)


# Для небольшого кол-ва данных эффективным решением будет третье, для большого кол-ва - второе решение,
# по сравнению с третьим оно более быстрое, по сравнению с первым оно расходует меньше памяти.