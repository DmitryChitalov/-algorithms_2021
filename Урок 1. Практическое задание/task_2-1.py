"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""
import random
"""
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
"""

def funct_1(lst_obj):
    #сложность: O(n**2)
    for i in range(len(lst_obj)):
        if lst_obj[i] <= min(lst_obj[i + 1:]):
            return lst_obj[i]

"""
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
"""
def funct_2(lst_obj):
    #cложность : O(n)
    min_val = lst_obj[0]
    for el in lst_obj:
        if el < min_val:
            min_val = el
    return min_val

rnd_lst = random.sample(range(0, 450), 5)

print(rnd_lst)
print(f'Ответ по первому блоку O(n^2): {funct_1(rnd_lst)}\n')
print(f'Ответ по второму блоку O(n): {funct_2(rnd_lst)}\n')

