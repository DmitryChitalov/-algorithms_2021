"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""
from random import randint

# Как я понял списковое включение это List Comprehension
num_list = [randint(0, 500) for i in range(10)]  # создадим наш список чисел. По сложности это вроде как O(n)
print(num_list)  # Выведем чтобы видеть правильно ли в итоге работает алгоритм


# Этот алгоритм сложности O(n^2)
def min_n2(lst):
    min_res = lst[0]  # O(1)
    for i in range(len(lst) - 1):  # O(n)
        if lst[i] < lst[i + 1] and lst[i] < min_res:  # O(n)
            min_res = lst[i]  # O(1)
    return min_res  # O(1)


# Этот алгоритм сложности O(n)
def min_n(lst):
    return min(lst)


print(min_n(num_list))
print(min_n2(num_list))
