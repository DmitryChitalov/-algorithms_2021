"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""
lst_1 = [[9, 3, 7, 5, 6, 3, 7, 2, 9, 2, 7, 4, 9], [2, 5, 3, 6, 4, 8, 5, 2, 9, 4],
         [8, 7, 7, 3, 5, 2, 7, 4, 9, 4, 2, 9]]


def min_func_1(lst):  # O(n^2) - квадратичная

    first_num = lst[0][0]  # O(1) - константная
    for el in lst:  # O(n^2) - квадратичная
        for num in el:
            if num <= first_num:  # O(1) - константная
                first_num = num
                result = []  # O(1) - константная
                result.append(num)  # O(n) - линейная

    return result  # O(1) - константная


print(min_func_1(lst_1))
#
lst_2 = [9, 3, 7, 5, 6, 3, 7, 1, 9, 2, 7, 4, 9]


def min_func_2(lst):  # O(n) - линейная

    first_num = lst[0]  # O(1) - константная
    for el in lst:  # O(n) - линейная
        if el <= first_num:  # O(1) - константная
            first_num = el
            result = []  # O(1) - константная
            result.append(el)  # O(n) - линейная

    return result  # O(1) - константная


print(min_func_2(lst_2))

