"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
"""


def search(lst):  # 2N^2+2 O(N^2)
    min = 0  # 1
    for i in range(len(lst)):  #N(
        for j in range(len(lst)):  # N(
            if lst[j] < lst[i]:  # 1
                min = lst[j]  # 1))
    return min  # 1


print(search([1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 0]))
"""
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
"""


def search_2(lst):  # O(N)
    min = lst[0] # 1
    for i in lst: # N
        if i < min:  # 1
            min = i # 1
    return min # 1


print(search_2([1, 2, 3, 4, 5, 6, 5, -2, 3, 2, 2]))
"""
Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""
