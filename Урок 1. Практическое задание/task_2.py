"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


'''Алгоритм с квадратичной сложностью'''
x = [2, 3, 5, 9, 1, 2, 3]


def my_min(sequence):
    low = sequence[0]
    for i in sequence:
        if i < low:
            low = i
    return low


print(my_min(x))

'''Алгоритм с линейной сложностью'''

x = [2, 3, 5, 9, 1, 2, 3]


sort_list = sorted(x)
low_2 = sort_list[0]
print(low_2)

'''
На мой взгляд, алгоритм с линейной сложностью будет занимать меньше времени,
так как нет прямого сравнения элементов списка между собой. Тут всего две операции - сортировка
и взятие первого элемента по индексу.
'''
