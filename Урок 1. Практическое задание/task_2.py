"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


def foo_1(lst_obj):
    """Функция выполняет сортировку вставками и возвращает из отсортированного списка 0 элемент

    Сложность: O(n^2).
    """
    for i in range(1, len(lst_obj)):  # O(n)
        key = lst_obj[i]  # O(1)
        j = i - 1  # O(1)
        while j >= 0 and key < lst_obj[j]:  # O(n)
            lst_obj[j + 1] = lst_obj[j]  # O(1)
            j -= 1  # O(1)
        lst_obj[j + 1] = key  # O(1)
    return lst_obj[0]  # O(1)


def foo_2(lst_obj):
    """Функция выполняет поиск минимального элемента списка сравнением с каждым элементом

    Сложность: O(n).
    """
    min_el = lst_obj[0]  # O(1)
    for el in lst_obj:  # O(n)
        if el < min_el:  # O(1)
            min_el = el  # O(1)
    return min_el  # O(1)


lst = [12, 11, 13, 5, 6]
print("Минимального значения для списка по функции 1:", foo_1(lst))
print("Минимального значения для списка по функции 2:", foo_2(lst))
