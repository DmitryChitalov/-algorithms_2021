"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""


def srch_1(nums): #O(n^2) запускается цикл в цикле поэтому квадратичная сложность
    for i in range(len(nums)):
        min_srch = False
        for u in nums:
            if i + 1 > u:
                min_srch = True
            if min_srch:
                return i


n = [5, 646, 84, 3, 88, 56, 4, 6, 15, 33, 21, 5, 34]

print(srch_1(n))


def srch_2(nums): #O(n) все опреции линейны, кроме операций присвоения она константная.
    min_srch = nums[0]
    for i in nums:
        if i < min_srch:
            min_srch = i
    return min_srch


print(srch_2(n))



#Долго парился, по выводу результата забыл в первом if +1 
#поставить, выдавал первое число из списка. Тестил с 
#отрицательными числами, но выдает 0, впрочем как и с 0, 
#а вот вторая функция работает, не могу понять что не так с первой. 
