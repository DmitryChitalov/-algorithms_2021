"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

ф-ции min() и sort() не исп-ем!
"""


# Функция  is_min проходит по всему массиву длиной n, ее запускаем в цикле для каждого элемента массива
# Итоговая сложность будет n^2


def find_min1(my_list):
    def is_min(number):
        res = True   # O(1)
        for i in my_list:   # O(n)
            if number > i:  # O(1)
                res = False  # O(1)
        return res  # O(1)

    for item in my_list:  # O(n)
        if is_min(item):  # O(n)
            my_min = item  # O(1)
    return my_min  # O(1)


def find_min2(my_list):  # Сложность O(n) т.к. один раз проходим по всему массиву
    my_min = my_list[0]  # O(1)
    for item in my_list:  # O(n)
        if my_min > item:  # O(1)
            my_min = item  # O(1)
    return my_min  # O(1)


print(find_min1([6, 15, 76, 3, -10, 24]))
print(find_min2([6, 15, 76, 3, -10, 24]))





