"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""

# ----------------------------Решение

"""
Сложность данного алгоритма O(N) * O(N) = O(N^2); При этом мы отбросили все O(1). На сколько я понял, их
можно не учитывать в данном случае, т.к. ролиь в быстродействии они не играют.
"""

def min_val_2(lst):
    min_v = 0                # O(1)
    for i in lst:            # O(N)
        for z in lst:        # O(N)
            if z < i:        # O(1)
                min_v = z    # O(1)
    print(min_v)             # O(1)


min_val_2([33, 12, 5, 44, 56, 2, 98])


"""
Итоговая сложность алгоритма O(N)
"""
def min_val(lst):
    min_v = lst[0]            # O(1)
    for i in lst:             # O(N)
        if i < min_v:         # O(1)
            min_v = i         # O(1)
    print(min_v)              # O(1)


min_val([33, 12, 5, 44, 56, 2, 98])
