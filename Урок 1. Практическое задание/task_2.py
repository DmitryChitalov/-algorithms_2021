"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать где какая сложность.
Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""


# Сложность O(n):
def check_easy(check_list):
    min_num = check_list[0]

    for i in check_list:
        if i < min_num:
            min_num = i

    return min_num


# Сложность O(n^2):
def check_hard(check_list):
    min_num = check_list[0]

    for i in check_list:
        count = 0
        for j in check_list:
            if i <= j:
                count += 1
        if count == len(check_list):
            min_num = i

    return min_num


# Список:
my_list = [195, 15, 44, 11, 124, 25, 67, 81, 19, 53, 29]

print(check_easy(my_list))
print(check_hard(my_list))
