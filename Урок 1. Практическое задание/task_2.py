"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

#############################################################################################
def list_check(lst_1):
    """
    Функция, должна обеспечивать поиск минимального значения для списка.
	В основе алгоритма - сравнение каждого числа со всеми другими элементами списка.


    Сложность: O(n^2).
    """
    min_value = lst_1[0]						# O(1)

    for i in range(len(lst_1[1:])):             # O(n)
        for j in range(len(lst_1[lst_1[i]:])):		# O(n)
            if min_value > lst_1[j]:					# O(1)
                min_value = lst_1[j]						# O(1)
            else:
                continue
                
    print(min_value)							# O(1)
    return min_value							# O(1)

    	
lst = [1, 2, 3, -1, 2, 0, 9]
list_check(lst)

#############################################################################################

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

#############################################################################################
def list_check(lst_2):
	"""
    Функция, должна обеспечивать поиск минимального значения для списка.
	В основе алгоритма - сравнение каждого числа со всеми другими элементами списка.


    Сложность: O(n).
    """
    min_value = 0								# O(1)

    for i in range(len(lst_2)):					# O(n)
        if lst_2[i] < min_value:					# O(1)
            min_value = lst_2[i]						# O(1)
        else:
            continue

    print(min_value)							# O(1)
    return min_value							# O(1)


lst = [1, 2, 3, -1, 2, 0, 9, 0, -1000]
list_check(lst)
#############################################################################################

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""