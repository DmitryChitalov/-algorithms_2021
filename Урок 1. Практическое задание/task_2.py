"""
Задание 2.

Реализуйте два алгоритма.
"""


def min_value(my_list):  # 0(n^2)
    """
    Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
    В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
    Сложность такого алгоритма: O(n^2) - квадратичная.
    """
    minimum_value = my_list[0]  # 0(1)
    for number in my_list:  # 0(n)
        """
        я думал что сложность считается не на выражение for in, а на весь блок.
        т.е. учитывается все, что выполняется в for in. я посчитал до этого O(N)*O(N)+O(1)+O(1)
        """
        for num in my_list:  # 0(n)
            if number <= num and number < minimum_value:  # 0(1)
                minimum_value = number  # 0(1)
    return min_value  # 0(1)


def min_value_2(my_list):  # 0(n)
    """
    Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
    Сложность такого алгоритма: O(n) - линейная.
    """
    minimum_value = my_list[0]  # O(1)
    for number in my_list:  # 0(n)
        if number < minimum_value:  # O(1)
            minimum_value = number  # O(1)
    return minimum_value  # O(1)


my_lst = [9, 6, 4, 3, 5, 5, 3, 4, 5, 6, 7, 4, 3, 34, 5, ]
print(min_value(my_lst))
print(min_value_2(my_lst))
"""
Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""
