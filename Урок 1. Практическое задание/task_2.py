"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""

from random import randint


def find_min_1(lst_obj):
    """Функция должна искать минимальное значение в списке с помощью сравнения
    каждого числа со всеми другими элементами списка. Сложность такого алгоритма: O(n^2) - квадратичная.
    """
    for j, number in enumerate(lst_obj):
        min_was_found = 1
        for n in lst_obj[j+1:]:
            if number > n:
                min_was_found = 0
                break
        if min_was_found == 1:
            return number


def find_min_2(lst_obj):
    """Функция должна искать минимальное значение в списке.
    Сложность такого алгоритма: O(n) - линейная.
    """
    min_value = lst_obj[0]
    for number in lst_obj[1:]:
        if number < min_value:
            min_value = number
    return min_value


test_list = [randint(0, 50) for _ in range(10)]
print(test_list)
print(find_min_1(test_list))    #O(N^2)
print(find_min_2(test_list))    #O(N)

