"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""


def find_min(lst):
    """
    Алгоритм 1:
    Сравнение каждого числа со всеми другими элементами списка,
    поиск минимального значения для списка.
    Сложность: O(N^2).
    """
    min_obj = lst[0]               # O(1)
    for i in range(len(lst)):      # O(n)
        for j in range(len(lst)):  # O(n)
            if lst[i] > lst[j]:    # O(1)
                min_obj = lst[j]   # O(1)
    return min_obj                 # O(1)


def find_min_simple(lst):
    """
    Алгоритм 2:
    Сравнение каждого числа со всеми другими элементами списка
    Сложность: O(N).
    """
    min_obj = lst[0]         # O(1)
    for elem in lst:         # O(n)
        if elem < min_obj:   # O(1)
            min_obj = elem   # O(1)
    return min_obj           # O(1)


if __name__ == "__main__":
    lst_sample = [0, 1, 2, 4, -1, -20, 30, 28, 5, 4, 2]
    print(find_min(lst))
    print(find_min_simple(lst))
