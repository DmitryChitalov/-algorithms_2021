"""Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2)- квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать где какая сложность.

Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

my_list = [10, 3, 5, 1, 8, 2, 4]  # сложность O(1) - константа


# алгоритм 1:


def min_num(lst):
    result = my_list[-1]  # O(1) - константа
    count = 0  # O(1) - константа
    for el_1 in my_list:  # O(N) - линейная
        for el_2 in my_list:  # O(n^2) - квадратичная 
            if el_1 >= el_2 and result > el_2:  # O(N) - линейная
                result = el_2  # O(N) - линейная
        count = 1  # O(1) - константа
        if count == 1:  # O(N) - линейная
            break
    return result  # O(N) - линейная


# итоговая сложнасть O(n^2) квадратичная так как это максимальная сложность


# алгоритм 2:
min(my_list)  # по таблице сложность o(n) линейная

min_func = min_num(my_list)
print(min_func)
print(min(my_list))
