"""
3.	Сформировать из введенного числа обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
 то надо вывести число 6843.
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все цифры извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Пример:
Введите число, которое требуется перевернуть: 123
Перевернутое число: 321
Не забудьте проверить и на числах, заканчивающихся нулем.
Пример:
Введите число, которое требуется перевернуть: 1230
Перевернутое число: 0321
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
"""


def number_reverse(n, help_number, reversed_number):
    reversed_number += str(help_number)
    if n // 10 == 0:
        reversed_number += str(n)  # конкатенация с последней цифрой
        return reversed_number
        quit()
    else:
        help_number = n % 10  # вспомогательная переменная, для получения отдельных цифр числа
    return number_reverse(n // 10, help_number, reversed_number)


print('Программа принимает натуральное число и выводит обратное по порядку входящих в него цифр.')
user_number = input('Введите число: ')
try:
    number = int(user_number)
    if number // 10 == 0:  # если пользователь ввёл однозначное натуральное число
        print(f'Перевёрнутое число от {number}: {number}.')
    else:
        last_digit = number % 10  # получаем последнюю цифру числа
        print(f'Перевёрнутое число от {number}: ', number_reverse(number // 10, last_digit, ''), '.', sep='')
except:
    print('Вы ввели не натуральное число, перезапустите программу и введите натуральное число.')
