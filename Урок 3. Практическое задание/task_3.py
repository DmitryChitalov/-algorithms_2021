"""
Задание 3.
Определить количество различных (уникальных) подстрок с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: примените вычисление хешей для подстрок с помощью хеш-функций и множества
Можно воспользоваться ф-цией hash() (см. материалы к уроку)

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а


Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.
"""

import hashlib

some_set = set()  # множество для хранения хешированных подстрок
some_str = 'papa'
for i in range(len(some_str)):
    for j in range(i + 1, len(some_str) + 1):
        if some_str[i:j] != some_str:  # исключаем запись слова целиком
                                # в множество, записываем только подстроки
            some_set.add(hashlib.sha256(some_str[i:j].encode()).hexdigest())
            print(some_str[i:j], end=' ')  # Выводим для наглядности все возможные подстроки вкл. дубли

print(f'\n{some_set}')  # Содержимое множества
print(f'Количество элементов в множестве: {len(some_set)}')
