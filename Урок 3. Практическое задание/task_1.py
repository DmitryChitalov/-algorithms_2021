"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря программно,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!
"""

import time


def time_decorator(func):
    def timer(*args, **kwargs):
        start = time.time()
        result = func(*args, **kwargs)
        end = time.time()
        print(f'Результат выполнения {end - start} сек.')
        return result
    return timer


@time_decorator
def gen_list(n):
    print('Наполнение списка')
    return [i for i in range(n + 1)]


@time_decorator
def gen_dict(n):
    print('Наполнение словаря')
    return {i: i for i in range(n + 1)}


@time_decorator
def insert_list(lst):
    print('Вставка в список')
    lst.insert(len(lst) // 3, 'insert')


@time_decorator
def insert_dict(dct):
    print('Добавление в словарь')
    dct.update({'Key': 'insert'})


@time_decorator
def find_list(lst):
    print('Поиск в списке')
    return lst.index('insert')


@time_decorator
def find_dict(dct):
    print('Поиск в словаре')
    return dct.get('Key')


my_list = gen_list(10000000)
my_dict = gen_dict(10000000)
insert_list(my_list)
insert_dict(my_dict)
find_list(my_list)
find_dict(my_dict)


"""
Наполнение списка
Результат выполнения 1.0818150043487549 сек.
Наполнение словаря
Результат выполнения 1.418529987335205 сек.

Генерация в словаре занимает доп. время для его наполнения.
т.к. при создании словаря необходимо вычислять хеши ключей

Вставка в список
Результат выполнения 0.008043766021728516 сек.
Добавление в словарь
Результат выполнения 0.0 сек.

В случае с insert, словарь константное  против списка линейное
В случае добавления значения в конец списка результат будет обратным.
Связанно это с генерацией хеша.

Поиск в списке
Результат выполнения 0.07543182373046875 сек.
Поиск в словаре
Результат выполнения 0.0 сек.

поиск элемента из словаря по ключу происходит гораздо быстрее,
чем поиск в списке по индексу
"""
