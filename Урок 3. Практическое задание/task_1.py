"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
   И укажите сложность каждой ф-ции, которую вы применяете для заполнения.
   У этих ф-ций может быть разная сложность. Поэтому время заполнения списка и словаря может как совпадать, так и отличаться.
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему
   И укажите сложность ф-ций, которые вы используете для операций.

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
"""

import time

def decor(func):
    def wrapper(*args):
        start_time = time.time()
        func(*args)
        end_time = time.time()
        print(f'Ожидание составило: {end_time - start_time} сек.')
    return wrapper

@decor
def fill_dict(d = {}):
    for i in range(0,10000000):
        d[i] = f'val{i}'

@decor
def fill_list(l = []):
    for i in range(0,10000000):
        # справедливо будет заполнять пару - ключ, значение. Но это крайне медленно.
        l.append([i, f'val{i}'])

@decor
def fill_list_one_elemnt(l = []):
    for i in range(0,10000000):
        # справедливо будет заполнять пару - ключ, значение. Но это крайне медленно.
        l.append(f'val{i}')



fill_dict()
fill_list()
fill_list_one_elemnt()