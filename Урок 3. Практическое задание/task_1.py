"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
   И укажите сложность каждой ф-ции, которую вы применяете для заполнения.
   У этих ф-ций может быть разная сложность. Поэтому время заполнения списка и словаря может как совпадать, так и отличаться.
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему
   И укажите сложность ф-ций, которые вы используете для операций.

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!

Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
"""
import time


def timing(func):
    def measure(i):
        start = time.time()
        res = func(i)
        print(f'Время выполнения: {time.time() - start:.4f} секунд')
        return res

    return measure


@timing
def fill_list(num):
    return [i for i in range(num)]          # O(n)


@timing
def fill_dict(num):
    return {i: i for i in range(num)}       # O(n)


@timing
def operate_list(src: list):
    for i in range(len(src)):               # O(n)
        src[i] = hash(src[i])               # O(1)


@timing
def operate_dict(src: dict):
    for i in src.keys():                    # O(n)
        src[i] = hash(src[i])               # O(1)


if __name__ == '__main__':
    cnt = 1000000
    print(f'Заполняем список и словарь {cnt} элементами')
    l = fill_list(cnt)
    d = fill_dict(cnt)
    print(f'Выполняем операции над списком и словарем из {cnt} элементов')
    operate_list(l)
    operate_dict(d)
    exit(0)

'''
Исследование проводилось над сравнимыми по сложности задачами реализуемыми с помощью
списка и словаря. Сложности создания объектов и операций над ними сопоставимы.
Лучший результат показал список при выполнении линейных операций. Это объясняется:
- конкретным набором операций над объектами (другие операции покажут иные результаты)
- большее время при выполнении линейных операций над словарем объясняется необходимостью
поиска хэша ключа в словаре.

Заполняем список и словарь 1000000 элементами
Время выполнения: 0.1702 секунд
Время выполнения: 0.3459 секунд
Выполняем операции над списком и словарем из 1000000 элементов
Время выполнения: 0.2846 секунд
Время выполнения: 0.3746 секунд
'''
