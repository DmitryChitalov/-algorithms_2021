"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря программно,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!
"""
import time

#Декоратор по замеру времени выполнения функции
def wrapper(func):
    def tags(*args, **kwargs):
        start = time.time()
        result = func(*args, **kwargs)
        print(f'Время выполнения функции {func.__name__} = {time.time()-start}')
        return result
    return tags

# Генерируем список
@wrapper
def my_list():
    sample =  [i for i in range(1000000)]

# Генерируем словарь
@wrapper
def my_dict():
    sample = {i: f'{i}' for i in range(1000000)}

my_list()
my_dict()

"""
Вывод: Запись нового элемента в словарь всегда будет медленней, чем запись в список. Для добавления нового элемента в 
спиок достаточно записать несколько байт в заранее выделенную память. В случае со словарем, вначале он считает хэш и 
только потом кладет в память.
"""