"""
Задание 1.

Реализуйте свои пользовательские функции, в которых реализуйте:

a) заполнение списка и словаря программно,
   сделайте замеры и сделайте выводы, что выполняется быстрее и почему
b) выполните набор операций и со списком, и со словарем,
   сделайте замеры и сделайте выводы, что и где выполняется быстрее и почему

Подсказка: для замеров воспользуйтесь модулем time (см. примеры урока 1)

Примечание: eсли вы уже знаете, что такое декоратор и как его реализовать,
то реализуйте ф-цию-декоратор для подсчета времени работы ваших пользовательских функций
И примените ее к своим функциям!
"""
import time


def dec_(func):
    def time_f(*args, **kwargs):
        start = time.time()
        res = func(*args, **kwargs)
        stop = time.time()
        return res, stop - start
    return time_f


test_list = []


@dec_
def _list():
    for el in range(10000):
        test_list.append(el)
    return 'Скорость списка'


test_dict = {}


@dec_
def _dict():
    value = 'a'
    for el in range(10000):
        test_dict[el] = value
    return 'Скорость словаря',


print(_dict())
print(_list())


@dec_
def read_list(num):
    for el in range(10000):
        if el == num:
            result = test_list[el]
            return 'Время поиска в списке', result


@dec_
def read_dict(num):
    return 'Время поиска в словаре', test_dict[num]


print(read_list(9999))
print(read_dict(9999))
# У списка выше скорость при вставке т.к. не нужно преобразовывать ключ в бит и он сразу вставляет элемент.
# У словаря выше скорость при чтении, он преобразует строку(ключ) в бит и сразу возвращает значение.
