"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""
# решение 1. Сложность линейная, n, самая тяжелая операция это поиск значения индекса в списке list.index.
# Чем длинее спсок, тем дольше поиск.

logins = ['Max', 'tiger', 'Power', 'Cat', 'Dog']
passwords = ['1234', 'qwerty', 'amper1', '1m2', '1234567890']
res_status = [1, 0, 0, 0, 1]

name = input('введите имя:')
psw = input('введите пароль:')
if psw == passwords[logins.index(name)]:
    if res_status[logins.index(name)] != 0:
        print('Вы зарегистрированы на ресурсе.')
    else:
        print('Ваша учетная запись не активирована. Для активации перейдите по ссылке')
else:
    print('У вас нет учетной записи, или Вы ввели неверные имя и пароль.')
