"""
Задание 4.
Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.
Сделайте профилировку каждого алгоритма через timeit
Попытайтесь написать третью версию, которая будет самой быстрой.
Сделайте замеры и опишите, получилось ли у вас ускорить задачу.
Без аналитики задание считается не принятым!
"""
from timeit import timeit

array = [1, 3, 1, 3, 5, 3, 5, 3, 4, 5, 1, 3, 1, 2, 3, 1, 3, 1, 5, 5, 5, 5, 5, 4, 5, 1, 3, 1, 2, 3, ]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    elements = {}
    for el in array:
        elements[el] = elements.get(el, 0) + 1
    return f'Чаще всего встречается число {max(elements, key=elements.get)}, ' \
           f'оно появилось в массиве {max(elements.values())} раз(а)'


print(func_1())
print(func_2())
print(func_3())

print(f'func_1() - {timeit("func_1()", globals=globals())}')
print(f'func_2() - {timeit("func_2()", globals=globals())}')
print(f'func_3() - {timeit("func_3()", globals=globals())}')

"""
Чаще всего встречается число 3, оно появилось в массиве 9 раз(а)
Чаще всего встречается число 3, оно появилось в массиве 9 раз(а)
Чаще всего встречается число 3, оно появилось в массиве 9 раз(а)
func_1() - 26.025732400000003
func_2() - 29.3048628
func_3() - 8.084722399999997

func_3 алгоритм с использованием словаря самый быстрый, это мало заметно при 3 повторениях 
числа как в первоначальном примере массива задания, но хорошо заметно при увеличении массива и количества 
повторений числа
"""