"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух) разной!! сложности
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""

dict_sample = {'Яндекс': 10000000,
               'Google': 20000000,
               'Amazon': 100000000,
               'Анеко': 500000,
               'Трубодеталь': 5000000,
               'ЧТЗ': 4000000,
               'Станкомаш': 7000000
               }

# Способ 1  сложность:O(n log n)
sorted_tuple = sorted(dict_sample.items(), key=lambda x: x[1], reverse= True)  #    O(n log n)+O(1)+O(1)+O(n)

print(sorted_tuple)
for i in range(3):
    print(sorted_tuple[i])


print("=====================================")

# Способ 2  сложность: O(n log n)
sorted_values = sorted(dict_sample.values(), reverse= True) # O(n log n)
sorted_dict = {}

for i in sorted_values:
    for k in dict_sample.keys():
        if dict_sample[k] == i:
            sorted_dict[k] = dict_sample[k]
            break

valuesList = list(sorted_dict.values()) #O(1)
keysList = list(sorted_dict.keys())  #O(1)

for i in range(3):
    print(keysList[i], ":", valuesList[i] )

# сложность у решений получилась одинаковая (наверно), первое решение я считаю лучше и эффективнее потому что оно
# занимает меньше строк кода и более понятное, написал я его быстро, больше мучался с тем как придумать второе
# и заставить его работать



