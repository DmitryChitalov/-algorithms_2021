"""
Задание 3.
Определить количество различных (уникальных) подстрок с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.
Подсказка: примените вычисление хешей для подстрок с помощью хеш-функций и множества
Можно воспользоваться ф-цией hash() (см. материалы к уроку)
Пример:
рара - 6 уникальных подстрок
рар
ра
ар
ара
р
а
Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.
"""
import hashlib

finaly_set = set()
user_string = 'mama'
for i in range(len(user_string)):
    for n in range(i+1, len(user_string)+1):
        if user_string[i:n] != user_string: # чтобы в дальнейшем не считалась такая же строка как исходная
            finaly_set.add(hashlib.sha256(user_string[i:n].encode()).hexdigest())
            # Добавляем в множество все ваврианты значений и оно само сохраняет только уникальные значения
            print(user_string[i:n], end=' ') # Вывожу все включая дубли, еще не сортированные

print(f'\n{finaly_set}')  # выводим содержимое множества
print(f'Количество элементов в множестве: {len(finaly_set)}')

