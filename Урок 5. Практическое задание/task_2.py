"""
2.*	Написать программу сложения и умножения двух шестнадцатиричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)

__mul__
__add__

Пример:
Например, пользователь ввёл A2 и C4F.
Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’]
Произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

1. вариант
defaultdict(list)
int(, 16)
reduce

2. вариант
class HexNumber:
    __add__
    __mul__

hx = HexNumber
hx + hx
"""

"""
сделаем только через ООП
"""


class HexNumber:
    def __init__(self, num):
        self.number = list(str(num))
        print(self.number)

    def __add__(self, other):
        a = int(''.join(self.number), 16)
        b = int(''.join(other.number), 16)
        return list(hex(a + b))[2:]

    def __mul__(self, other):
        a = int(''.join(self.number), 16)
        b = int(''.join(other.number), 16)
        return list(hex(a * b))[2:]


a = 'a2'
b = 'c4f'

# a = input("A=")
# b = input("B=")

h_n1 = HexNumber(a)
h_n2 = HexNumber(b)

print(h_n1 + h_n2)
print(h_n1 * h_n2)

a = list(input("A="))
b = list(input("B="))
