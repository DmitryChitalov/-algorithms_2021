"""
2. Написать программу сложения и умножения двух шестнадцатиричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)

__mul__
__add__

Пример:
Например, пользователь ввёл A2 и C4F.
Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’]
Произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

1. вариант
defaultdict(list)
int(, 16)
reduce

2. вариант
class HexNumber:
    __add__
    __mul__

hx = HexNumber
hx + hx
hex()
"""
from collections import defaultdict
from functools import reduce

DICT_16 = {'0': 0, '1': 1, '2': 2, '3': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, 'a': 10, 'b': 11, 'c': 12, 'd': 13,
           'e': 14, 'f': 15}


def summa_16(el, prev_el):
    return hex(int(''.join(prev_el), 16) + int(''.join(el), 16))


def mul_16(el, prev_el):
    return hex(int(''.join(prev_el), 16) * int(''.join(el), 16))


num_16 = defaultdict(list)
nums = input('Введите 2 шестнадцатеричных чисел через пробел: ').split()
num_16[nums[0]] = list(nums[0])
num_16[nums[1]] = list(nums[1])
sum_new = list(reduce(summa_16, num_16))[2:]
mul_new = list(reduce(mul_16, num_16))[2:]
print(sum_new)
print(mul_new)
