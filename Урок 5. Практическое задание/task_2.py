"""
2. Написать программу сложения и умножения двух шестнадцатиричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)

__mul__
__add__

Пример:
Например, пользователь ввёл A2 и C4F.
Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’]
Произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].


1. вариант
defaultdict(list)
int(, 16)
reduce
defaultdict(list)
"""
#Проблема defaultdict в том, что, вдруг пользователь введет 2 одинаковых числа, тогда defaultdict запишет под один
#ключ(так как числа одинаковые) 2 значения.
import collections
from functools import reduce


defdict = collections.defaultdict(list)


def reducer_func(el_prev, el):
    # el_prev — предшествующий элемент
    # el — текущий элемент
    return el_prev + el


user = input('Введите 2 шестнадцатиричных числа: ').split()

defdict[user[0]].append(list(user[0]))
defdict[user[1]].append(list(user[1]))

for value in defdict.values():
    for i in range(len(value)):
        # print(list(hex(int(value[i][i], 16))))
        print(reduce(reducer_func, list(hex(int(value[i][i], 16)).upper())))

print(defdict)