"""
2. Написать программу сложения и умножения двух шестнадцатиричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)

__mul__
__add__

Пример:
Например, пользователь ввёл A2 и C4F.
Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’]
Произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

1. вариант
defaultdict(list)
int(, 16)
reduce

2. вариант
class HexNumber:
    __add__
    __mul__

hx = HexNumber
hx + hx
hex()
"""
from collections import defaultdict


def hex_calculator():
    hex_dic = defaultdict(list)
    num1 = input('Введите первое шестнадцатеричное число: ')
    hex_dic[num1] = list(num1)
    num2 = input('Введите второе шестнадцатеричное число: ')
    hex_dic[num2] = list(num2)

    hex_sum = list(hex(int(num1, 16) + int(num2, 16)))
    hex_mul = list(hex(int(num1, 16) * int(num2, 16)))
    print(f'Введенные числа: {hex_dic[num1]} и {hex_dic[num2]}')
    print(f'Сумма чисел: {hex_sum[2:]}')
    print(f'Произведение чисел: {hex_mul[2:]}')


if __name__ == '__main__':
    hex_calculator()
