"""
2. Написать программу сложения и умножения двух шестнадцатиричных чисел.
При этом каждое число представляется как массив, элементы которого это цифры числа.
Например, пользователь ввёл A2 и C4F. Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

Подсказка:
Для решения задачи обязательно примените какую-нибудь коллекцию из модуля collections
Для лучшее освоения материала можете даже сделать несколько решений этого задания,
применив несколько коллекций из модуля collections
Также попробуйте решить задачу вообще без collections и применить только ваши знания по ООП
(в частности по перегрузке методов)

__mul__
__add__

Пример:
Например, пользователь ввёл A2 и C4F.
Сохранить их как [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно.
Сумма чисел из примера: [‘C’, ‘F’, ‘1’]
Произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].

1. вариант
defaultdict(list)
int(, 16)
reduce

2. вариант
class HexNumber:
    __add__
    __mul__

hx = HexNumber
hx + hx
hex()
"""


class HexNumber:
    def __init__(self, val: str):
        self.val = val

    def __add__(self, other):
        return HexNumber(hex(int(self.val, 16) + int(other.val, 16)))

    def __mul__(self, other):
        return HexNumber(hex(int(self.val, 16) * int(other.val, 16)))

    def __repr__(self):
        return str(self.val)[2:]


fst_num, sec_num = input("Введите два шестнадцатиричных числа через пробел: ").split()
num_1 = HexNumber(fst_num)
num_2 = HexNumber(sec_num)

print(f'Сумма введённых чисел равна {list(str(num_1 + num_2))}')
print(f'Произведение введённых чисел равно {list(str(num_1 * num_2))}')
