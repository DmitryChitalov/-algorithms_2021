"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (не менее двух)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Задание творческое. Здесь нет жестких требований к выполнению.
"""
# Хранилище реализовано в 2-х словарях (1 - логин-пароль, 2 - логин-информация об актиации)
# Сложность:
# O(n) + O(1) +  O(1) + O(1) + O(1) + O(1) + O(1) + O(1) + O(1) + O(1) + O(1) +  O(1) + O(1) + O(n) + O(n) + O(1) +
# O(1) + O(1) + O(1) + O(1) = 3 O(n) + 17 O(1) - сложность линейная

users = {
    '1': '1',
    'login_1': 'pass_1',
    'login_2': 'pass_2',
    'login_3': 'pass_3',
    'login_4': 'pass_4'
}

users_activation = {
    '1': True,
    'login_1': True,
    'login_2': False,
    'login_3': False,
    'login_4': False
}


def users_checking(user_login):
    user_pass = input('Please, input a password ')  # программа будет предлагать пользователю ввести пароль до верного
    while user_pass != 'q':  # сложность O(n) - линейная
        if user_pass == users.get(user_log):  # сложность O(1) - константная
            if users_activation.get(user_log):  # проверка активации, сложность O(1) - константная
                print('Access is allowed')  # сложность O(1) - константная
                break  # сложность O(1) - константная
            else:  # сложность O(1) - константная
                print('Access is denied, please, activate your account')  # сложность O(1) - константная
                break  # сложность O(1) - константная
        else:  # сложность O(1) - константная
            print('Access is denied, please, check the password')  # сложность O(1) - константная
            user_pass = input('Please, input a password ')  # сложность O(1) - константная


print('Welcome. If you want to quit, input "q"')  # пользователь может прервать активацию в любой момент
# сложность O(1) - константная
user_log = input('Please, input your login ')  # для запуска функции проверяем логин, сложность O(1) - константная
while user_log != 'q':  # сложность O(n) - линейная
    if user_log in users:  # сложность O(n) - линейная
        users_checking(user_log)  # сложность O(1) - константная
        break  # сложность O(1) - константная
    else:  # сложность O(1) - константная
        print('Sorry, user with this login do not exist, please check login ')  # сложность O(1) - константная
        user_log = input('Please, input your login ')  # сложность O(1) - константная

# второе решение не успела подготовить, сдам позднее




