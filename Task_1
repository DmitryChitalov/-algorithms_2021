"""
1. Отсортируйте по убыванию методом "пузырька" одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран
исходный и отсортированный массивы.
Сортировка должна быть реализована в виде функции.
Обязательно доработайте алгоритм (сделайте его умнее).
Идея доработки: если за проход по списку не совершается ни одной сортировки,
то завершение. Обязательно сделайте замеры времени обеих реализаций
и обосновать дала ли оптимизация эффективность
Подсказка: обратите внимание, сортируем не по возрастанию, как в примере,
а по убыванию.
Сделайте выводы!!!
Опишите в чем была ваша доработка и помогла ли вам доработка??
"""
import timeit
import random


def loop_1(list_item):
    num = 1
    while num < len(list_item):
        for i in range(len(list_item) - num):
            if list_item[i] < list_item[i + 1]:
                list_item[i], list_item[i + 1] = list_item[i + 1], list_item[i]
        num += 1
    return list_item


def loop_2(list_item):
    num = 1
    len_list = len(list_item)
    while num < len_list:
        for i in range(len_list - num):
            if list_item[i] < list_item[i + 1]:
                list_item[i], list_item[i + 1] = list_item[i + 1], list_item[i]
        num += 1
        len_list -= 1
    return list_item
list_pattern = [random.randint(-100, 100) for _ in range(10)]

print('Сгенерированный список:\n', list_pattern)
print()
print('Отсортированный список по убыванию:\n', loop_1(list_pattern[:]))
print()
print('Отсортированный список по убыванию модифицированной функцией:\n', loop_2(list_pattern[:]))

list_pattern = [random.randint(-100, 100) for _ in range(1000)]
print()
print('Время обычной функции:')
print(timeit.timeit("loop_1(list_pattern[:])", globals=globals(), number=1000))
print()
print('Время модифицированной функции:')
print(timeit.timeit("loop_2(list_pattern[:])", globals=globals(), number=1000))

'''
Результаты 1 задачи:
Сгенерированный список:
 [-21, -76, 39, -43, -35, -89, -15, 82, 68, 69]

Отсортированный список по убыванию:
 [82, 69, 68, 39, -15, -21, -35, -43, -76, -89]

Отсортированный список по убыванию модифицированной функцией:
 [39, -21, -15, -35, 82, -43, 68, -76, 69, -89]

Время обычной функции:
164.21159780000002

Время модифицированной функции:
91.09268399999999

Выводы: 
Доработал функцию уменьшенив длину массива, что привело к сокращению времени выполнения ф-и на 55%
'''