"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.
Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""


#############################################################################################
def get_min_value1(lst_obj):                # O(n^2)
    min_value = lst_obj[0]

    for i in range(len(lst_obj)):           # O(n)
        for j in range(len(lst_obj)):       # O(n)
            if lst_obj[i] <= lst_obj[j]:    # O(1)
                continue
            else:
                min_value = lst_obj[j]      # O(1)
    return min_value                        # O(1)


#############################################################################################
def get_min_value2(lst_obj):        # O(n)
    min_value = lst_obj[0]

    for i in range(len(lst_obj)):   # O(n)
        if lst_obj[i] < min_value:  # O(1)
            min_value = lst_obj[i]  # O(1)
    return min_value                # O(1)


#############################################################################################
s = '3 6 1 2 0 12 11 -3 0'
print(get_min_value1(list(map(int, s.split()))))
print(get_min_value2(list(map(int, s.split()))))
